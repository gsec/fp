(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    172480,       3404]
NotebookOptionsPosition[    169361,       3304]
NotebookOutlinePosition[    169696,       3319]
CellTagsIndexPosition[    169653,       3316]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data Handling", "Subtitle",
 CellChangeTimes->{{3.58989370080422*^9, 3.589893710571745*^9}, {
  3.589898364998941*^9, 3.589898366077715*^9}, {3.58989942230232*^9, 
  3.58989942317397*^9}, {3.589918159154972*^9, 3.589918160560418*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 FontWeight->"Plain"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5899188797150087`*^9, 3.589918881688589*^9}}],

Cell[CellGroupData[{

Cell["System & Directory", "Subsubtitle",
 CellChangeTimes->{{3.589918114348894*^9, 3.5899181226803303`*^9}, {
  3.589918871774456*^9, 3.5899188730424147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"os", " ", "=", " ", "\"\<linux\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"baselinux", " ", "=", " ", "\"\<~/repos/fp/FKO\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "basewin", " ", "=", " ", "\"\<D:\\\\Git\\\\F-Praktikum\\\\AFM\>\""}], 
   ";"}], "                   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "vergiss", " ", "nicht", " ", "den", " ", "backslash", " ", "mit", " ", 
    "backslash", " ", "zu", " ", 
    RowBox[{
     RowBox[{"escapen", "!!"}], "!"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subdir", " ", "=", " ", "\"\<data-plots\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"os", " ", "\[Equal]", " ", "\"\<linux\>\""}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"slash", " ", "=", " ", "\"\</\>\""}], ";", " ", 
     RowBox[{"basedir", " ", "=", " ", "baselinux"}]}], ",", "  ", 
    RowBox[{"(*", " ", "THEN", " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"slash", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     RowBox[{"basedir", " ", "=", " ", "basewin"}]}]}], "]"}], "       ", 
  RowBox[{"(*", " ", "ELSE", " ", "*)"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5898937121168623`*^9, 3.5898937744790373`*^9}, {
  3.589893830758959*^9, 3.589893861654973*^9}, {3.589893913336081*^9, 
  3.5898939555289993`*^9}, {3.589894010271295*^9, 3.589894020995091*^9}, {
  3.589894057001574*^9, 3.589894141649548*^9}, {3.5898983082682343`*^9, 
  3.589898333443564*^9}, {3.589899027357992*^9, 3.5898990596142673`*^9}, {
  3.5899167188349867`*^9, 3.5899167485865517`*^9}, {3.58991832653786*^9, 
  3.589918575312986*^9}, {3.590224295461801*^9, 3.5902243253365097`*^9}, {
  3.590224396622587*^9, 3.5902244025969286`*^9}, {3.590399358971972*^9, 
  3.590399365927926*^9}, {3.590755481310053*^9, 3.5907554815319147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"basedir", "<>", "slash", "<>", "subdir"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*.dpt\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.589916975884541*^9, 3.589917018013637*^9}, {
  3.589917080976493*^9, 3.589917083376637*^9}, {3.590755516673197*^9, 
  3.5907555171138353`*^9}}],

Cell["\<\
 For[i = 1, i < Length[fnames] + 1, i++, Print[i, \": \", fnames[[i]]]]\
\>", "Text",
 CellChangeTimes->{{3.58991780250066*^9, 3.589917806135584*^9}, 
   3.589918022039701*^9, {3.589918070817853*^9, 3.589918070852622*^9}, {
   3.589919983936844*^9, 3.589919986734435*^9}, 3.5902246120259075`*^9, 
   3.5902256832701793`*^9, 3.590399333157661*^9, {3.590404004262417*^9, 
   3.590404012991782*^9}, {3.590471294340187*^9, 3.590471305132175*^9}, {
   3.5907555341380463`*^9, 3.590755551666417*^9}, {3.5908271323898783`*^9, 
   3.5908271432993183`*^9}, {3.5908494610398283`*^9, 3.5908495312053967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "num_", "]"}], " ", ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"fnames", "\[LeftDoubleBracket]", 
     RowBox[{"num", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
    "\"\<Table\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.590755575376831*^9, 3.590755579153143*^9}, {
  3.590755690082288*^9, 3.590755690690936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.590755749014434*^9, 3.590755800053501*^9}, {
   3.590755839252345*^9, 3.590755853778029*^9}, {3.590755895067017*^9, 
   3.590755941299329*^9}, {3.5907560035415707`*^9, 3.590756011829071*^9}, 
   3.590756077986495*^9, {3.590756144769759*^9, 3.590756208186165*^9}, {
   3.590756262809587*^9, 3.5907562810013113`*^9}, {3.590756427171832*^9, 
   3.5907564654329977`*^9}, {3.590827166824374*^9, 3.5908271672295027`*^9}, {
   3.590829088492915*^9, 3.590829088752921*^9}, {3.590829719205427*^9, 
   3.590829741240904*^9}, {3.5908301057109013`*^9, 3.590830106113016*^9}, {
   3.590830219858553*^9, 3.590830219910832*^9}, {3.590830269998877*^9, 
   3.590830270628394*^9}}],

Cell[CellGroupData[{

Cell["variables", "Subsubsection",
 CellChangeTimes->{{3.5908509580137587`*^9, 3.590850963740944*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"begin", "=", "350"}], ";", 
  RowBox[{"end", "=", "14898"}], ";", 
  RowBox[{"average", "=", "0.03"}], ";"}]], "Input",
 CellChangeTimes->{{3.5908509679541473`*^9, 3.590850983183313*^9}, {
  3.59086925634168*^9, 3.5908692640941477`*^9}, {3.590869755014402*^9, 
  3.590869764189694*^9}, {3.590869887422905*^9, 3.590869887533895*^9}}],

Cell["\<\
Manipulate[ListPlot[data[n], PlotRange -> {0.95, 1.05}], {n, 0, 22, 1}]\
\>", "Text",
 CellChangeTimes->{{3.590755934556054*^9, 3.590755935112893*^9}, {
   3.590755968856822*^9, 3.5907559689929047`*^9}, {3.590827110523011*^9, 
   3.590827159688807*^9}, {3.590827362768519*^9, 3.5908273635138063`*^9}, {
   3.590856259754369*^9, 3.590856272051862*^9}, {3.590856310858718*^9, 
   3.5908563408260193`*^9}, {3.590856699818503*^9, 3.590856707676117*^9}, 
   3.590915346072104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Samples\[AliasDelimiter]", "Subsubsection",
 CellChangeTimes->{{3.590849584333547*^9, 3.5908495994765167`*^9}}],

Cell["Reflexion GK 300-8000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rgk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
  3.590829218251894*^9, 3.590829224582018*^9}, {3.5908294507014017`*^9, 
  3.590829453219268*^9}, {3.590829883852687*^9, 3.590829885776716*^9}, {
  3.5908299365866337`*^9, 3.590829965988549*^9}, {3.590830393493857*^9, 
  3.5908303936508904`*^9}, {3.5908686557031918`*^9, 3.590868679806596*^9}}],

Cell["Reflexion TQ 1000-15000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.5908292358086*^9}, {
  3.590829353343009*^9, 3.590829356275927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rtq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "15", ",", "18", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.590829379472682*^9, 
   3.590829381254821*^9}, {3.590829813528311*^9, 3.590829849608543*^9}, {
   3.590829971964417*^9, 3.5908299788124847`*^9}, 3.590830396501801*^9}],

Cell["Transmission GK 300-8000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}, {
  3.590829391094329*^9, 3.590829393330346*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tgk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "11", ",", "14", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.590829412118149*^9, 
   3.590829412277051*^9}, {3.590829470312109*^9, 3.5908294704216623`*^9}, {
   3.5908298990663147`*^9, 3.590829909368627*^9}, {3.590829983474216*^9, 
   3.5908299910455914`*^9}, 3.59083039839853*^9}],

Cell["Reflexion TQ 1000-15000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}, {
  3.590829493665338*^9, 3.5908294982511463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ttq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "19", ",", "22", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.5908294885958767`*^9, 
   3.590829490587605*^9}, 3.5908298671126966`*^9, {3.590829916893248*^9, 
   3.590829919782926*^9}, {3.590829994262092*^9, 3.590830000061201*^9}, {
   3.590830097911972*^9, 3.590830097995057*^9}, 3.590830400310499*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rgk", "\[LeftDoubleBracket]", "im", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{
      "rtq", "\[LeftDoubleBracket]", "im", "\[RightDoubleBracket]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"im", ",", "1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590830002649498*^9, 3.590830078206731*^9}, {
  3.5908301344211407`*^9, 3.590830149853099*^9}, {3.590830410752392*^9, 
  3.590830416231207*^9}, {3.590830557956255*^9, 3.59083056056857*^9}, {
  3.590830721299576*^9, 3.5908307236816797`*^9}, {3.5908309222316723`*^9, 
  3.590830924789551*^9}, {3.590852949754847*^9, 3.590852952321006*^9}, {
  3.590868591592432*^9, 3.59086864255062*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e$$ = 0.1, $CellContext`im$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`im$$], 1, 4, 1}, {
      Hold[$CellContext`e$$], 0.1, 10}}, Typeset`size$$ = {
    800., {244., 250.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`im$8995$$ = 
    0, $CellContext`e$8996$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`e$$ = 0.1, $CellContext`im$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`im$$, $CellContext`im$8995$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$8996$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Part[$CellContext`rgk, $CellContext`im$$], 
         Part[$CellContext`rtq, $CellContext`im$$]}], 
      "Specifications" :> {{$CellContext`im$$, 1, 4, 1}, {$CellContext`e$$, 
         0.1, 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{847., {301., 308.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.590830115940566*^9, 3.5908301502746687`*^9}, 
   3.590830416951972*^9, 3.59083056200149*^9, 3.590830724249929*^9, 
   3.5908309254075747`*^9, 3.5908491250395317`*^9, 3.59085007031147*^9, 
   3.590852956655814*^9, 3.5908534429594727`*^9, 3.59086862026727*^9, 
   3.590868690558504*^9, 3.5909148554970837`*^9, 3.590915278201398*^9, 
   3.590915355529561*^9, {3.590916095385543*^9, 3.590916112599676*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ExponentialMovingAverage"], "Input"],

Cell[BoxData["ExponentialMovingAverage"], "Output",
 CellChangeTimes->{3.590914855620618*^9, 3.590915278350183*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fctab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"ExponentialMovingAverage", "[", 
        RowBox[{
         RowBox[{"data", "[", "n", "]"}], ",", "average"}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "fnames", "]"}], "-", "1"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.590850680561717*^9, 3.5908507880076303`*^9}, {
  3.590851067368474*^9, 3.590851093655755*^9}, {3.590851177720718*^9, 
  3.590851241217023*^9}, {3.590852350921177*^9, 3.590852355960884*^9}, {
  3.5908528889053698`*^9, 3.590852912185439*^9}, {3.590867921150661*^9, 
  3.5908679324620543`*^9}, {3.590869238526897*^9, 3.590869309928442*^9}, {
  3.590869736463798*^9, 3.5908697367434597`*^9}, {3.5909164115920258`*^9, 
  3.590916430953465*^9}, {3.5909166268233147`*^9, 3.590916640003255*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fct", "[", 
   RowBox[{"n_", ",", "cut_", ",", 
    RowBox[{"x_:", "x"}]}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{
          "fctab", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
          "[", "x", "]"}], 
         RowBox[{"x", "<", "cut"}]},
        {
         RowBox[{
          RowBox[{"fctab", "\[LeftDoubleBracket]", 
           RowBox[{"n", "+", "8"}], "\[RightDoubleBracket]"}], "[", "x", 
          "]"}], 
         RowBox[{"x", ">", "cut"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQrceT3s1w8JXjqaNL+kC0ScyEqSD63b/+OSD6TduD
BSCaIVd4IYj2VXJbDqKXBUtsAtFRZWfOgujcK2ZXQfSknOgnIPrYm71gevpc
yVcg+t6uu29ANJ/XwY8g+sf0w79A9F/FSkZGIP3Jrp4NRB9b8LgBRB88fqAV
RN9h05wGoi8dtgfTa9YLzAHRJ8SVwXTvrEVnQLTVz+dgWmeG4nUQbXD2FZju
OHvlAYi+kvfsIYguMm59BqIVtgu+AtFNLbEaTEB61/G5YLqC69YUViBdNX/V
VBCdpiu2CkTv0tNZDaKPLOCUYQP5P1xdFkQDAO0wpmU=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "fctab", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "[", 
        "x", "]"}], ",", 
       RowBox[{
        RowBox[{"fctab", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "8"}], "\[RightDoubleBracket]"}], "[", "x", "]"}], 
       ",", 
       RowBox[{"fct", "[", 
        RowBox[{"n", ",", "cut", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "500", ",", "12000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "14", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cut", ",", "1000", ",", "10000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590868988005583*^9, 3.590869021870907*^9}, {
   3.590869130075376*^9, 3.590869132158749*^9}, {3.590869486290564*^9, 
   3.590869577311226*^9}, {3.59086961053631*^9, 3.5908696256079283`*^9}, {
   3.5908698038327637`*^9, 3.590869847718919*^9}, {3.590916343404654*^9, 
   3.590916354872097*^9}, 3.590916465795228*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`cut$$ = 2870., $CellContext`n$$ = 13, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 14, 1}, {
      Hold[$CellContext`cut$$], 1000, 10000}}, Typeset`size$$ = {
    549., {166., 170.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$21556$$ = 
    0, $CellContext`cut$21557$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`cut$$ = 1000, $CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$21556$$, 0], 
        Hold[$CellContext`cut$$, $CellContext`cut$21557$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Part[$CellContext`fctab, $CellContext`n$$][$CellContext`x], 
         Part[$CellContext`fctab, $CellContext`n$$ + 8][$CellContext`x], 
         $CellContext`fct[$CellContext`n$$, $CellContext`cut$$, \
$CellContext`x]}, {$CellContext`x, 500, 12000}, PlotRange -> Full], 
      "Specifications" :> {{$CellContext`n$$, 0, 14, 1}, {$CellContext`cut$$, 
         1000, 10000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{596., {244., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.590916187968131*^9, {3.590916349851892*^9, 3.5909163557092113`*^9}, 
   3.590916466861764*^9, 3.590916934082596*^9}]
}, Open  ]],

Cell["\<\
cuts = Table[{n, FindRoot[fctab[[n]][x] - fctab[[n + 8]][x], {x, 4000, 350, \
12000}, Compiled -> True]}, {n, 7, 14}];\
\>", "Text",
 CellChangeTimes->{{3.590865932385112*^9, 3.590865979709795*^9}, {
   3.5908660666459084`*^9, 3.590866144607682*^9}, {3.590866200205927*^9, 
   3.590866204808511*^9}, {3.590867227880617*^9, 3.590867233167459*^9}, {
   3.5908672946156693`*^9, 3.590867295231584*^9}, 3.590917209335429*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cuts", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "4100"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "3930"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "3200"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "2100"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "3000"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "2200"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", "4000"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "3000"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.590917084378511*^9, 3.590917084745322*^9}, {
   3.590917256379138*^9, 3.590917261655658*^9}, {3.590917301291809*^9, 
   3.590917478254045*^9}, 3.590918123825942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "4100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3930"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "4000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "3000"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.590917085420744*^9, 3.590917479883094*^9, 
  3.5909181246466417`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FP shit", "Section",
 CellChangeTimes->{{3.590853847142745*^9, 3.5908538488702307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "cuts", "]"}]], "Input",
 CellChangeTimes->{{3.5909180921429243`*^9, 3.59091809657751*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.590918096962246*^9}]
}, Open  ]],

Cell["setze reflint = probe 7 (gaas mit cut bei 4100)", "Text",
 CellChangeTimes->{{3.590864567929431*^9, 3.590864604073188*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reflex", "[", 
   RowBox[{"n_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"fct", "[", 
      RowBox[{
       RowBox[{"cuts", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"cuts", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", "\[Nu]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"n", "-", "6"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.5908666482224407`*^9, 3.590866687109887*^9}, {
   3.59086673140807*^9, 3.590866732502294*^9}, {3.590866828974646*^9, 
   3.59086692430245*^9}, {3.5908669663430443`*^9, 3.5908669675995197`*^9}, {
   3.590867032358933*^9, 3.590867042406828*^9}, {3.590867095617938*^9, 
   3.590867109342719*^9}, 3.590917551636902*^9, 3.59091784304812*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trans", "[", 
   RowBox[{"n_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"fct", "[", 
      RowBox[{
       RowBox[{"cuts", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"cuts", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", "\[Nu]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "5", ",", "8"}], "}"}]}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"n", "-", "6"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.590918011295733*^9, 3.590918039702732*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"trans", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "450", ",", "12000"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "7", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590866981646891*^9, 3.590867002212289*^9}, {
  3.590867059925222*^9, 3.590867076421645*^9}, {3.5908671176692133`*^9, 
  3.590867140869739*^9}, {3.590917641975754*^9, 3.590917642142837*^9}, {
  3.5909176912982473`*^9, 3.590917691471084*^9}, {3.590917795290566*^9, 
  3.590917795574295*^9}, {3.590917855001628*^9, 3.590917892999538*^9}, {
  3.590917924755765*^9, 3.5909179402329273`*^9}, {3.5909180553212442`*^9, 
  3.59091805578905*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 7, 10, 1}}, Typeset`size$$ = {
    360., {111., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$47915$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 7}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$47915$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`trans[$CellContext`n$$, $CellContext`x], {$CellContext`x,
          450, 12000}], "Specifications" :> {{$CellContext`n$$, 7, 10, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {166., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.590866990837481*^9, 3.590867002829132*^9}, {
   3.590867034597952*^9, 3.5908670766906557`*^9}, {3.590867122186975*^9, 
   3.5908671424530888`*^9}, 3.590867244080454*^9, 3.5908673218922043`*^9, 
   3.590914862999886*^9, 3.590915286060112*^9, 3.590915376667118*^9, 
   3.590915420601988*^9, {3.5909176291890993`*^9, 3.590917643074066*^9}, 
   3.590917693066556*^9, 3.5909178009984503`*^9, {3.590917852069516*^9, 
   3.5909178939145*^9}, {3.5909179301581583`*^9, 3.5909179414757223`*^9}, 
   3.590918057425325*^9, 3.5909181293321867`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"470", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.590853862920051*^9, {3.590918351277709*^9, 3.590918351714553*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]rg1", "=", "0.0"}], ";", 
  RowBox[{"\[CapitalDelta]rg2", "=", "0.0"}], ";"}]], "Input",
 CellChangeTimes->{{3.59086462772552*^9, 3.590864630308135*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Reflexion", " ", "einer", " ", "idealen", " ", "Grenzfl\[ADoubleDot]che", 
    " ", "in", " ", "Abh\[ADoubleDot]ngigkeit", " ", "von", " ", "n", " ", 
    "und", " ", "\[Kappa]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rg", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "^", "2"}], "+", 
       RowBox[{"\[Kappa]", "^", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}], "^", "2"}], "+", 
       RowBox[{"\[Kappa]", "^", "2"}]}], ")"}]}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Absorptionskoeffizient", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "[", "\[Nu]_", "]"}], ":=", 
    RowBox[{"4", "*", "\[Pi]", "*", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}], "*", "\[Nu]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.590853882856579*^9, 3.590853896216625*^9}, {
  3.590864317093154*^9, 3.59086432270041*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transth", "[", "\[Nu]_", "]"}], ":=", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "rg"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "rg"}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}]}], "*", "d"}], "]"}]}], 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", "rg", ")"}], "*", 
       RowBox[{"(", "rg", ")"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}]}]]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reflth", "[", "\[Nu]_", "]"}], ":=", " ", 
    RowBox[{"rg", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"(", "rg", ")"}]}], ")"}], "^", "2"}], ")"}], "*", " ", 
       RowBox[{"(", "rg", ")"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", "rg", ")"}], "*", 
        RowBox[{"(", "rg", ")"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}]}]]}]}], 
   ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.590853942517531*^9, 3.590853977260036*^9}, 
   3.590859630092596*^9, {3.590860800928321*^9, 3.590860837976828*^9}, {
   3.590864289347361*^9, 3.590864313554084*^9}, {3.5908662818509693`*^9, 
   3.590866446288129*^9}, {3.590866546099783*^9, 3.590866560929204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Nullstellensuche", " ", "zur", " ", "Bestimmung", " ", "der", " ", 
    "optischen", " ", "Konstanten"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"transth", "[", "\[Nu]", "]"}], "-", 
              RowBox[{"trans", "[", 
               RowBox[{"7", ",", "\[Nu]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"reflth", "[", "\[Nu]", "]"}], "-", 
              RowBox[{"reflex", "[", 
               RowBox[{"7", ",", "\[Nu]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Kappa]", ",", "0.0"}], "}"}], ",", 
           RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
           RowBox[{"DampingFactor", "\[Rule]", "1"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "30"}]}], "]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "450", ",", "14000", ",", "4"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5908600453290377`*^9, 3.590860051183248*^9}, {
  3.590860236535568*^9, 3.5908602433661613`*^9}, {3.5908602869672127`*^9, 
  3.590860314151001*^9}, {3.590860555197912*^9, 3.590860555297802*^9}, {
  3.5908605867178593`*^9, 3.590860611821871*^9}, {3.59086070803046*^9, 
  3.590860796206442*^9}, {3.590860875517754*^9, 3.590860899279314*^9}, {
  3.59086451588124*^9, 3.590864517168496*^9}, {3.5908646692491617`*^9, 
  3.590864680040265*^9}, {3.590864743985942*^9, 3.59086474442418*^9}, {
  3.590865101839962*^9, 3.590865144361377*^9}, {3.590865175072837*^9, 
  3.59086524987227*^9}, {3.590867606028224*^9, 3.590867606403186*^9}, {
  3.590918169252109*^9, 3.590918170105032*^9}, {3.590918288189055*^9, 
  3.590918295625743*^9}, {3.590918452363659*^9, 3.590918467143009*^9}, {
  3.590918513832646*^9, 3.590918539681138*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "der", " ", "Brechzahl", " ", "aus", " ", "der", " ", 
    "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", " ", "und", 
    " ", "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"brechzahlsemi", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"n", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "brechzahl", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Brechzahl\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.590864943512665*^9, 3.590864957648201*^9}, {
  3.5909188667686863`*^9, 3.590918880440836*^9}, {3.590918947051874*^9, 
  3.5909189472102947`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "des", " ", "Extinktionskoeffizienten", " ", "aus", " ", 
    "der", " ", "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", 
    " ", "und", " ", "graphische", " ", "Darstellung"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"extinktionskoeffizientsemi", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Kappa]", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "extinktionskoeffizient", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Extinktionskoeffizient\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2000", ",", "8000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.0001"}], "}"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.590864981559432*^9, 3.590864987460594*^9}, {
  3.590867645321713*^9, 3.590867683449604*^9}, {3.590918897171887*^9, 
  3.590918897424253*^9}, {3.590918941593197*^9, 3.590918941829583*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Berechnung", " ", "des", " ", "Absorptionskoeffizienten", " ", "und", " ",
     "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"absorptionskoeffizientsemi", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"4", "*", "\[Pi]", "*", 
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}], "*", "\[Kappa]"}], "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "absorptionskoeffizient", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Absorptionskoeffizient (cm-1)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2000", ",", "8000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{
  3.59086493315349*^9, 3.590864975467409*^9, {3.590865008875325*^9, 
   3.590865015698516*^9}, {3.5908677529950743`*^9, 3.59086779797788*^9}, {
   3.590918902895021*^9, 3.590918932924306*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"440", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.590918979112187*^9, 3.590918979161021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Nu]", ",", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"transth", "[", "\[Nu]", "]"}], "-", 
             RowBox[{"trans", "[", 
              RowBox[{"8", ",", "\[Nu]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"reflth", "[", "\[Nu]", "]"}], "-", 
             RowBox[{"reflex", "[", 
              RowBox[{"8", ",", "\[Nu]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]", ",", "0.0"}], "}"}], ",", 
          RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
          RowBox[{"DampingFactor", "\[Rule]", "1"}], ",", 
          RowBox[{"MaxIterations", "\[Rule]", "30"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Nu]", ",", "500", ",", "12000", ",", "6"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5909197151390877`*^9, 3.590919801176449*^9}, {
  3.590919856067883*^9, 3.590919866278112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "der", " ", "Brechzahl", " ", "aus", " ", "der", " ", 
    "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", " ", "und", 
    " ", "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"brechzahlndot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"n", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "brechzahl", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Brechzahl\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.590864943512665*^9, 3.590864957648201*^9}, {
  3.5909188667686863`*^9, 3.590918880440836*^9}, {3.590918947051874*^9, 
  3.5909189472102947`*^9}, {3.590918997359078*^9, 3.5909189980881367`*^9}, {
  3.5909197729931097`*^9, 3.590919773127739*^9}, {3.59091981169629*^9, 
  3.590919813087823*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "des", " ", "Extinktionskoeffizienten", " ", "aus", " ", 
    "der", " ", "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", 
    " ", "und", " ", "graphische", " ", "Darstellung"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"extinktionskoeffizientndot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Kappa]", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "extinktionskoeffizient", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Extinktionskoeffizient\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2000", ",", "8000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.0001"}], "}"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.590864981559432*^9, 3.590864987460594*^9}, {
  3.590867645321713*^9, 3.590867683449604*^9}, {3.590918897171887*^9, 
  3.590918897424253*^9}, {3.590918941593197*^9, 3.590918941829583*^9}, {
  3.590919002615966*^9, 3.590919007544724*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Berechnung", " ", "des", " ", "Absorptionskoeffizienten", " ", "und", " ",
     "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"absorptionskoeffizientndot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"4", "*", "\[Pi]", "*", 
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}], "*", "\[Kappa]"}], "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "absorptionskoeffizient", "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
         "\"\<Absorptionskoeffizient (cm-1)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2000", ",", "8000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{
  3.59086493315349*^9, 3.590864975467409*^9, {3.590865008875325*^9, 
   3.590865015698516*^9}, {3.5908677529950743`*^9, 3.59086779797788*^9}, {
   3.590918902895021*^9, 3.590918932924306*^9}, {3.5909190118750687`*^9, 
   3.590919013514762*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.590918747034926*^9, 3.59091874997442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"brechzahlFCTsemi", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"brechzahlsemi", ",", "average"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5909187663081617`*^9, 3.590918806992597*^9}, {
  3.590918907713724*^9, 3.590918925661825*^9}, {3.5909190278748407`*^9, 
  3.590919084211961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extinktionFCTsemi", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"extinktionskoeffizientsemi", ",", "average"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5909187663081617`*^9, 3.590918806992597*^9}, {
  3.590918907713724*^9, 3.590918925661825*^9}, {3.5909190278748407`*^9, 
  3.59091912248776*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"brechzahlFCTndot", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"brechzahlndot", ",", "average"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5909187663081617`*^9, 3.590918806992597*^9}, {
  3.590918907713724*^9, 3.590918925661825*^9}, {3.5909190278748407`*^9, 
  3.590919084211961*^9}, {3.5909191278497953`*^9, 3.5909191440792437`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extinktionFCTndot", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"extinktionskoeffizientndot", ",", "average"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5909187663081617`*^9, 3.590918806992597*^9}, {
  3.590918907713724*^9, 3.590918925661825*^9}, {3.5909190278748407`*^9, 
  3.590919084211961*^9}, {3.5909191493111467`*^9, 3.590919169092476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"{", 
    RowBox[{
    "brechzahlFCTsemi", ",", "extinktionFCTsemi", ",", "brechzahlFCTndot", 
     ",", "extinktionFCTndot"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5909191942883377`*^9, 3.5909192420754013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"plots", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
       "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "500", ",", "14000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "200"}], ",", "15000"}], "}"}], ",", "Full"}], "}"}]}],
      ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
        "\"\<Absorptionskoeffizient (cm-1)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590919177353856*^9, 3.5909191794129257`*^9}, {
  3.590919246558384*^9, 3.590919490404335*^9}, {3.590919836387375*^9, 
  3.590919836997102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
COMNmyV+/z5PgUmpbngfzYTf0osPaMRQsMBme3sFyYRbM6KlnnHoL9OB/hTM
p8PtC8XvxlNgZM532qqGCcLPhf37EynY94fyPFrNhNdXhZoVkykInDG0+ID5
6BPI3OSUinxBx+fIK9QP63mZNy5RkLl+/8ay5ziP6QhOd1xGf1wPDlB4hvqw
hN9GOhPP752a9roM54EpnhdWWRRsKTzd8rwU671lVuZyNubPgFqX2mMmFJb/
DX6fQ0Go1nDwkUdYz1emO0VuUhAfY3x5ooQJogGTsCcfzzv2WN4UmX1o4kb8
bQo2PChPNMb6Eh399PNmAQUlb/m3aj3A7y/WbK4oosB+7Lzqm3u4/uqiCw3F
GP/MvM8KWJ/j7OSW/vsUHOAx6h4qQvsczijxlFBQKR7bqFz0/+837XwlH1PQ
Yjio71qI899l/Wq1JxSs+5GvFYr1rqi5RsTwKQVqwptfN9/BefqtqL3dMwom
3rxdMQefv3SfvOv7nILTubmKJDJToGsq/iUFg5Z1fM24nmUOYZRXifncqmE+
jvvl6hanV1RRsGbXtffld5kw1JTa01BDgZ9EnbQm2qvjfXbdAEGBloTTw3fI
0fMdQnk4FMidkzHJxfO9v2P4VpKL/tOxWnv1PurdTlVp9VoKJFU3n2tEfzw9
O11m946C0YKz3hboX37xbgG/Rgpebkx4n4r+N39I7U/4gP4scQpvx/hkmd6/
kfcR7Zn8u0UM49f37dLPihYKrmb52fM9RX2KOLe5sY2C98Ef0x8ih8oevTDw
iYJ/DDOL98hvyo1beLqwfvbQMgxkSQt1JaluCqT9niiloP45/RL3Ve+hYOHA
noRPuP+DC3+rDHspqFlFfDJC+2YUexba92G+DubO5cF4G1fRdn4D6P/84UfC
GO9024d3EwYp0LiqoQ94vu4/l6fyhijImnh7Uh7Pr5oWbPT8FwUza++rhaG/
zqo5pzeOYD3EykZLoL8JelfPwCgFfLLSy2JuY/64rFvHO0HB77zcqMlczB8e
qVCpSQok6NaNvNmYP1mzterTFNDPBVKVsH+Ma/cuNfqL+XQq4u3NNMyfxjfu
9rMUaMcHGu7C/pTo+ajMj4cD1vXxexfHY/4wMgUS+TiwJ6nJ1Av7o2J+6P58
AQ7QFkO8jucxf8D1xvO5HHi8WPkTEY7502b2s5HBgedTVr9HsX+z/Ndv/s7i
wGoD//WD2N8PiS69wCvMAZ/Fn3ePYf/PK+ZpkVrIgR1vBw9W47yg1/PWx2gR
B0BivoIFzhsxIaVV9uIcEFvOdlqB88j7JVkL/SU5oBl9ie8bzltyT8LtEpdw
IHBPNrsU57MTe93v5ktzoPGwEJP2w/wZ3DP1XJYDnt9dpsSQ+WO0jN7LcWAo
LSvyGs535itk0r/Lc6CjMjFQBTnrJV8PrwIHcn+PvLjog/ljNaCxRIkDmWv0
eTSQ14/Vh2go4/5W4pcWIocmldUaqXDgzXUmXxnOj7Uq2UuPrOXAtSf36lYj
L1EL+nJCjQNnp5ZtVUV2W2dTFKDBgancv4Q7fl+6Qfd0lCYHjr1LcnBA+3g3
LdFN3cAB9yvOEwvxfHv0JnlztDkwlhtbJo/zWtbWZvruJg4ML93+4R5y//ay
lHJdDgTryawNR9YySD9MbObAlt0Pxm7j9xHGvvKNWzmQDR3uteifetMDA53b
OCDYfy1iF7KsuWbJ4A4O1D249FAb+fh+0bOT+hzQt/2Y1If81HJ4m6ARB262
RdpdwvUFD9czxEw4sCtrQaQ0znv7be+/W2bKgQUT9o5aGN+cI4lX1uzmQHvr
mxfVmA8/jno4bDLnQLFRr18IzmM6rqbKBvvQ/+7lbQM4X33wYJbbW2I+7Vou
OIH5J3+qP/TEIQ5EbQ/V23kJ5zMfyijgMAeCFjkY1GP+MgOjmlPscP+jF+EE
zjcHg51zrh/hQMuXneIjeZhPYTvd7jri+hKKh3eivo1ErlAvd+LA/vePpFpQ
v7bG8P5hu3DgcsG1Zx2oV/EXPr9qcOPA9hmliibUo9bEyujOYxyQ5lMy/79e
lVKu7xk8wQH71FfBaVjfPpeCJSY9ObBRZ+2QHOrBklk7sZQHHHj2OeTdtnEm
bKq2OMkt4YDhzYX132cw36NNufylHLD8cUZXUIAFlxfoRPiXcyB+y5Pi9kUs
WCS3+LdNFQfWyiinl6ixQHgbt0HpPebjsac7Bl1YsFagStWhiQNN4Us09U+y
wJTzNC6zmQNE1jzTyjMsuLD31vb5nzjwofd5ymgCCwoXX8s26OTAn5jPcpWX
WUC3pE6FfOZA17d3NzfcYEH/tTjL8i8cGNRtd3hZyIJ5jmElI18xfnkWcwQf
s2CV4hnhNX0c8JePFDj8nAWGA57HnAc4wLt1Xl5KNQtc7jkT2YMcIBMy9FbR
LIjytpFvHuJA+BaBrWV1LMjX2h8sMsyBfruVohONLKiZMm41+c2Bq4JxQT+a
WNDzErQix7CehkL+pLWwgC9CO+XFBOrNsIdeSTsL5A1Vh8Yn0b9dN4KnO1iw
naVgoj7DgdsfXGxnOlngULf0lvs/rOfg7TGWXSwITRXlvTmHhupcwcoufJ5z
kGHXzktDeZHTJyf8/tXSOc8WC9Aw7nfz9ac2FnR0ji/eM5eGZS/7e7jNLPh3
88epGAYNfqx9y1XQPhm3ntrXLBqE7M/q70P79da0KU/Pp6FkA98bGzxf4GPq
s4coDXJf9lnUkiz4U3Nz7/6lNGxm5vwZe8ICidjM4ngZGvZOH8yqe8gCLbNk
BrGMBs2RV8r3illgKRLjPLuchsKuE4Ny6H/fD8GvN66kIdfj8tPDt1mQdsVX
xluRBuuRdijNZ8Fj2xMBRatoeJCiurjtJgsalx/90LOahrc/dUY7rrNg5KuV
huxaGhbcbu9Ky2SBSKF5wkE1Gs7tViFqLrFA3dOwP0mDhr6tukvdk1lgvm6L
Pq1Jw36PJzs7MF9Ojq+/wadFg93iAluHeBYkPlP5q7eRhgnWVx1J5HvB8lZ+
Omi/lSJx+gILardLld7Xo+Gb7KWNL2JZMCi4UKR/C9ojct1KNJoFeVE/rWaA
hmTB+s83I1lgI1iXu2AHDa2uxb6sCMz3qHvf5fVpeFYkteRpOAveCCSu1zKk
YcWbWA9lfB553iPI2JiGR3WvhN2Q9QTMCJtdNNhGfnc7hzwauWaBlxkNnZrb
LVqQi/iFDkXsoSE/aSHPQ9zPMfJ7TvpeGrp2PfokGsWCJfzc/oL9NKx5+rVI
Be1riChc98KChjPyWkEf8HkcX1xg/UEaGAJaS86cx3yLcK/5YkVDx+tH8/9f
f4rXeP6ENfrDqYBfBe0tCV9lybSj4VbGNY25YSw4xjvvuswRGmyU04r2hWL+
hn/7pu5Ig5Hyo5H0EBa08pDqO51oSNGVGLJATgm7FXDQhYaja+P8fJBNeKKq
jrnRkN1Q0q2LzBvmzAo+hv67IsAPwSx4Nkf/QPIJGuTl3yvlnmOBd+jKa3me
NAR9GnFfHcgC5Tn8vWVeNGy6/qFm0VkWdIV8UeV60+CapRldE8CCjNkq/w4f
GhTehTxUxffNQ3Irh/1oCF4fIBgVhPU/G8YQCKBhZVd560/crzLYYZ9kIA0j
TbONDchn/sFVlSAaVn2O7byG76sHy/VsCaFBvCw7rBHX6/s7u2ZfGA2vjFT4
unG/nKBOX+cIGrbLP/mVhvp06O/Ll2fO0xA+Ktp/EHlhUPbc+Gga6pb6FN1G
pmaCzK/HYj2Y5bY/QQ49Z3ul5AINPtG7FO2QN87odbMTaBjgDdxhgfwrUFql
5SINKqcgZA3y7enp04PJWM8ydt3L/FlgF9j2fDaVhqKcusuVviwQn34mIJZO
w9cMX41zPix4ezZzt2IGDS+OK33gQY6aCri8KZMGtVRQUUXectaqyzSLhhhX
YbNbyOOTG5WPZNOgrG2/RdEP6yFA0vt0Dg18fIxkU9zfZXLiWVQuDboZZj1z
0f+yAR/5MvNoeF1IeSojN/15Ylp8C8+r3vbxG76feCb9UuUdGi61977/hvYa
/PHtaCxETq0JLEL+52+h9O0u1sPlouV9yE8m1ntN3aOh7d5SmVL83tN/Ufn8
hzQUzx5x3oHrK0z85ln+iAZpx5zx7xiPdr9Gk/WlNDy+xPdXHOOVNl6SaliG
78fP7wjDeJr6pbQfLqfBvGFjwivMV/7xUwqeFVg/GglNBZjvz333eoa9oGGD
U7P+TqwXnzH1srRXNEiop3m1xLFgje/COXde0/BFmzjkh/rRM/rTqKKaBp0B
7eDlF1lwVvKOtRBBw7/E4M6MJIy33hFPW4qGQ6Pme1+lsOCWvWTYPRr9wTQ7
9AD1STeiPnX2DerfbfVilyssqL8Vc8u8jgYBZtza3KvoX5TyG+9o+FG2JicL
9W3mxx/uSCPWd9mji1sysJ5EHnbsaKIhbtRRbhuut2qD+3BaM+bT9S1jMrjf
y0PL+XtbaXDJv97pivYcONcirv2JhuNBEVc+ob0D15OVYzpRD/VUo6SQQ6uN
9Vo+06DKIx3YgucT/8azZ3UP6rvlxesPUA/vMp85BPbSMOWVnaOCvE3V2+dN
H9ZnIn+iC3LT3tXRMt9p+OX99YMQfn/Ct/uK5w/UcwOJ2oFErO8rmXdf/aTB
hJ8eNUjF+ny+79XCERquSVYbJ+D5VbuYDQ6jWP/Pdi5ejP26hq+6p2SchqdH
Z503F7DgsFLgBN8kDVrdFgyXB1gPJppMi2ka1l9o25aN/SfK87v0rb80DNtm
Ji/F/i2dclNtYhbPc2HUPvo16lep9XYjXi684kj3/sT+ZdgiZnGFnwsav/rl
e95i/sxwXQcEuSDztTHH+SPqjVzkWV0GFw765y141s2CbNfR65/mc+H+MpP5
nEkW7nu3RHUhF8aGEq9eEhAC+p4TO0SUCwsK0qeGRIVgbOz9wHIJLognvxvk
qglBnFTCX28pLuQLG9zR3yoEcpv1F9Ys5cKVlNGLp/YIgWlk6QYXOS5cL579
0nlKCLpvexiVyXPh4U4bc/lIITjDVbCep8AF+e6RPvHLQpAnmh5aqMyF5epv
s8VfCcF0jh93aB0XEiQ3y3hJzIekGtWOrRuQu92/71CbD4p9vb+StLkwUVL/
lWM4H/apHRTX1ONCv4up/eDZ+VD4QtvBX58LO5bOOF3onw/w+edpypALRpKT
ab8EhaGJ/06UlAkXipaqD89VEAYeU8m7Fbu5EL7BVNXsqDCkn6x/KbSXC+O7
NBYERgjDmtSYd7b7ufDBzVzaOk8Yqp5Azz0LLiyOL7D4wRaGQ61/xmcPcuFR
qV6FRp8w/AfpFB7k
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 3.0500000000000003`},
    Frame->True,
    FrameLabel->{{
       FormBox["\"Absorptionskoeffizient (cm-1)\"", TraditionalForm], None}, {
      
       FormBox[
       "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
        TraditionalForm], None}},
    ImageSize->800,
    Method->{},
    PlotRange->{{-200, 15000}, {3.0317683094468686`, 3.863376105108466}},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
e3Cr/oEYKiqc1uGPlHwJwb5XxQLDqKjxpH27rNJLUPPbm3AygIo+ugbbf778
Etjq3jGa/0dFY625XO4mLyGF2/51hDsVrTK9bjp4/yUYaF0+FOZCRUxXf91r
83wJma5KSXNOVHQgaYfNKuIlEPvF7AseUJH0b4EGpvSXIGZuc67BgYoMHhmw
XGl9CSH797exWVORTYNT9XLfS4iUF6ORs6Qij11Rpgm/8fM1fhm7mVNRpGYp
g9LSS9jltPxm7DYVZUX3lP+gTQU513KJYhMqqvk6ZejLmQq8oyrT542pqFuE
nvbo4VR4YH+TmHeLir7biha/PZMKtooMPm44z1cq69+/mAqlXJ/e+eO8a8tk
Z/+NVOi+Mx/RjjOXinte9b1UgDdbCidxe+KhCXqGT1PBSNjOpQVnxf7qjX9B
qZDFHtv/H36+jkB/ZnpiKkyff/XX35SKzCwWtFQLU+HWhwlSD+7v4yLWlcmG
VGCcN7phZEZFgUvHUkN7UsFi3aNB3oKKkhQvqUt/T4VaI18ZRzz+El/LhU+z
qcAx2OC5G89PS49PovN2KowSfH7O2uL5Cu5ND6NPA7sjcwvi96nI6YTpk9G9
aSCaQnDvfEhFz/pmNWR40oD3QJh03xMqiuDbs9R/NA3A38Fq3pOKEhsTug7L
pIGJ81+nBV8qyjQ7muJyNg3i1p7tPR9MRUV0NQ+6ldPAeF+g8Fw4FVUXqKoJ
aKSBjUzlEfpYKmrW7udzuJIG/WHi3dHJVPSGakZpMkwDmW/N4+F4/X1T8Io3
t02D7iIF03d4fU6MsNq/epQG9+ufyrM2UBHFO0WZ3j0NAkcC6BvaqIjmbf10
QWgasI18u/tgkIqY719q2opJA6ULNnvdfuD3wf45WjsF/5+1hXN6Gr8Po2VF
anEavJC8ViiH95Mrze87K9VpUGwvf1iadRH15Pf6bzSlQbPlPkIN/yJyXCvs
pelLA+b2zw2P5RdRa2rCMt3XNPDRo/Wou7iIOC4G8O0ZS4Ofhm1XCgwWUe0L
Mwv2lTTIZgtZyHi6iJiUdIO4d9JgQ7i3NiVkEd0aUyrhZ0iHKwkJi9ovF9HO
Sd41Eb50WDM6M7vzehGp9X4IkUXp8NQ/VGRacAnFO5PL5C+mw/SV85Igt4Sm
BQsHFHXTAXN9v8dLdwmF2fsfVDVLBx8xazMl/yU0wuGkcsk2Hf7L9tgpyVhC
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
+yLRu/dqCzwKXq/ec54G+/u+aJ5ZvwXe0p+ZXVKlwfwZmkwu3WiBWhr6K7s0
aDCS22+F1lstcCTi4QPNKzTYUTPJxcq7LXB0y3s77C4N1paE7sxb/a/hKo+H
so2iWbOHSkhC1uzrMMzca0ZZ0iZUQimyVEgICSVLkgrZkmgj0UKS7MxOhTZL
WUq+KFqJVL73z/t7573vueeec55nWvFGTZ4pK4gfvF9ueaYX1IqJLbvuqIfy
Q7ZDxO0bwa24bVL9u/Yxflhk2LQv92gr+svb6gVm8kPv/OYXMadb8T/Via1v
6vkh5eKRGtvKVtwet4siJCEAj9OCpXfcbcVIn96pAGkBmIoPPBB8n+jvXPKS
uUwA3IN2q16qIfjX41PesUoA1GHD2Z+NrZgwcdXyo4EAtHxU8yt92oqz9hQN
tqsAzFr3LJP82oosjCy7Wi4AQe+MwntN2lCeduzM912CkGkocv9JTRvqhzbf
IT0XArj/7Md/9HbMX1FyP//+YhhMa3f8va4db+SpJ+6oXQxxvrVXJBzakecw
Kz/SsBgaVlzZYOzcji65/z3awl4M5LjgazGu7Ximecbv6JvFYLZBcpukXzuy
EqykmgVF4Lk6363V/u14OKm2976oCIT9+/nPOLAdN7L3UmakROD+/Tfl7ofa
cfnO5TIBiiJgIF/BXxzRjqt9+GvcjURA+4NTlUlyO9LJEu+dPUSA3UQVWZfa
jlN5xQf37xaB/Xkm3tvT2nGAq2P+zVcEbmxQFIvNaMdPAkEv+0NFQK1q3IeZ
046uCuHpb9NEoO3M29rXee04H7NbfOqCCPj4dUtOFLRj2iXPhUX5IlAsX1cn
daUdqXRIjCsVgVXxqTI7Son5pNaWkdki0LAj1j/oVjvy5xyWq3kmAp4moY2x
t9vRcuXnZJteESj4sD2w5G47Fm/sZ9SMi4C8s1brRG07nlj5MDtQShRkFVih
xzntmPwx1Dd9uyicqu72aOC1o0m5svmojyhMb3xrN9/Zjj/hS3bIQVHoPflT
Prq7Hb/m8JUZnhCFy5/VWsP727H8wLIigduioN0SL3PwczuuXTEk2iQuBlR/
qyoPaQbGlRxP2vZSDO7xrSvMl2XgSXmtIv4RMVAt3JLcu4yBs/0zGcsnxUCw
29/DXYGBRzeZ/+wTEgcuOYffRY2Bk/FvpXRJ4uAq9cPF0YyBkl1d8wHnxSGw
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
LPd/HC69ntAT+pc0LOZizIG4B862RF4MbPzyXJSLm52SR9psKCB+1IzySZyL
1oe/594zp8AO2ZVn+KW4GOpzr+iHHpFHlXx9CtJcbNJYYRSvQeSVw0dNY1ku
0lS6lVeqEnk2+jTcYRkXNxUNa/5bRYHU+Jq23XJcHD7UlvdVkQIvFAulj8pz
8fbeOp4fUas8POmdocjF87pv0oaVKHBwa2DFDSUujpm+KGhVpsCjz5t/Nyhz
cevbZte7KykgmGrh8EKFi4s+KL1qlaXAljWrcj6pcVEjrf3uxsUUKGwSGOXX
4GLe0fPPLOdt4OPOCWNFLS6G5CQd8Z20AbPprnhjHS5uU7af+u+tDTzRLVq5
R5+LVKEzbMVWG1A0PP7+oCEXPadttj97YAMBJp63o425yP0j+IFaagM15tZH
kk2JeZuZjQO5NsBvpWidZc5FIQj/pZ1iA5tt5viLSVy0r1htKxFpA4XQy6uw
IvaRS3mwzdcGxmm1mXXWXGw1r+67tsUGLNbneLAoXKwcfbH2AdkGEh0j1J4D
F91b9wVNrrGBLmfXiSFbLpp2b98fImkDB7bJxsyt46K3T0Jo44g1FO/JyNfb
xMWrg9R5uVRrmNx3yMdqCxe16gK9VodYA9nfWWe9CxcHFFU2WLtbQ2qQ7jcX
Vy4aPLBI+gPW8PKQWN1udy7GzQ41RutZg9rh8YSDO4j9UqstHFdZQ2g4xyHa
g4tm+ywoVFlraDxaKp3sycXJKwGaXoutQexYcm+mNxd/mrrJ1c2TYXucX/GV
PYReZKJKDb6T4foJu4CKvVzU+/1gNPITGb6fWmNU58vFM0mx6xtGyQCp/LPM
/Vw0T8hJnxwgQ/qZkeaeAC7qG/cqS3eRoT+jJWUoiItDYmdaJNvIoJV5ZfPn
g8S8d37EkGrIEH4xbsVcMBdjLW9bPionQ2ue15DQYS5mVbxrbS0hg1ShTans
EcIfHzo8pC6RwfPKypDVEVw0rAx3788hw62rvy30jnLxcOCB97ezyDBzo++f
ZTQX9wZP3O7OJIPdrUesdce4qKwv7BaZS4YLFbkZLscJfhVY/zqJ/oN3I913
x3OxofN2zc9KMuhWuykfPMHF33PlNwYfkCHqodlYVCIXOfrO8WoEXmbd0jtJ
SVzUObri0rcqMsg2fo/ITCH4KDewXn+PDLtbuilXTnMxnnTr6KEKMlS03xOq
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Frame->True,
    FrameLabel->{{
       FormBox["\"Absorptionskoeffizient (cm-1)\"", TraditionalForm], None}, {
      
       FormBox[
       "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
        TraditionalForm], None}},
    ImageSize->800,
    Method->{},
    PlotRange->{{-200, 15000}, {9.648343020862525*^-6, 
      0.0017733195539868865`}},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
vTmhitEhc/gf1nm9vw==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 2.},
    Frame->True,
    FrameLabel->{{
       FormBox["\"Absorptionskoeffizient (cm-1)\"", TraditionalForm], None}, {
      
       FormBox[
       "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
        TraditionalForm], None}},
    ImageSize->800,
    Method->{},
    PlotRange->{{-200, 15000}, {2.0952758632985744`, 35.64732695369313}},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
56Zjkc6tLLl7YrDCGE9/wUvHzTUDxZ+/icHGG08+v+eno55z0JYRZXGQWFcW
typMR9tNR3UFH4qD6W/7pxqSdIyKK35z8KMEHGs13mYsTceDjy69H1DbAk6X
9l20lqFjlr3Jn+6YLRDwg8jnu4uOfFzHvPP2bYWCadLxSmU62kWHbb1RtQ2q
yqpL21ToyL/3g++PTZLQ4pq5xFClY5OaRxOXtiQ8fu+XOalJR+28c1xRpZKw
/GbHqIQeHesuqRy8miwFbBl8ivIGdPx6yFu6+rkUcNmshe03ouPv4TnaFz5p
kBkYkrQ5SMeQN5F1+dnSoJRI93Uxp+NT2oTpyoQ0aB1poPgdpqPbPrfNtxS2
g2XvLZf/jtIxxma/ZyNjOzjGBjfnHmO+lyhywExYBtyMXTdWH6fjxgydOD1P
GQihHCjvsWfKx6gPKYjsgIr2H1/XOdPR6eOyaX6qLETvX+zXcaHj96O2hbvZ
doJL25/mIDc6/rq/OB93aSdsbWGL+OZJx8O6vad9XXdBcr2gwBt/OqpUh74S
DZKDC8piv/kD6Sj1uWPeZL08HKrdOnYkmI4TZ579R0+Vh433dpbTQuho9oWt
6CZJAa6U79epu0FHkytcZ5+CEtjuPCD1NYaOT34nCJz5rASqpfobZePoeE/G
XPzVQWX4fte8PzuBjpm8klOmK8pwNv+kS0w6HdlYpuOPXVUB3Op8kJJJxxdB
hzZ1vlOBrbluiv+y6ZjwMVDF2nAfDGVdWPYroKPO1OHDOgRVOJR2Ld6pgo6F
3HwisilqsFsw2jezio79ryUPC86pwcbUOJuX9+ioqNTF+slUHbqSUiTNGuhY
EP2igWNeHdRulzSpPaAj17pEAd5dmsBHrMy82EHH3KCaUCFfTZiLqwmrItHR
9b49W227JlTGtppK0ei485OZ5Xnz/bA16tEI8QkdEzk0ltPstGCF9SnZ5Bkd
O2Le/xm/owVD1wZKI5/T8eS3CeqO51qQHP724vIrOv5lbG7oN9GGTVe/rZ8a
Y9qz7VLwlJgOTP3+Mb31PR21DrWReA/rACV48an9JDO+5tnKD0N0ICRwLePZ
JyZva7rdOaQD9r/Ywji+0HE7Y0Gxdb0uqAdsPms0Q0cBI14vOUVdmPPl3fNg
jo7PLCrDvofrglv16uqzeTpO8pzXt7urCyMfv/ZPLTDrGVObXlJ1oduREcD1
m1kPz/e4FbMcAJ20RuPtK3Sstzb6u3PLAWjoLxDR/Mesz3diFhXqByDP6OrD
M+sYaMnfv2Xe/QCYi34w38zHwMhXR35z7QfoOjawZYsAA0+KxkxKWwGoJ5Bm
9wox0FdeS6HeG0CaLSvFUYyBolyFz/TzATJ0Y1wvSjDw4zF7xYQmAM7gAI0b
WxmoZxERMvAIYHnmyNsaaQYeNOP0HFkGKO1q8zy+j4E5n2p2N7ojSKyU6Hiq
MbBX3k1sIQAhWS2FK1yDgTrZ0+66kQihld4N5doMbBr4KvM7B8E6VfrPigED
2y1Nrk8MIvQ+5X7MY8xAdQf+BN0PCMj+L3eHKQPF31itf/oTQT7stZ7FIQaW
Nnsl3uLWg4I2Gr/LEQaGfolb3iGhB0I/6z8EWzKwY9Otnc279CB+T37rbSsG
CuefkzmlpgesHvE3i6wZKDlnclNeXw+Ciy47ttowkKtx0+jNw3rwfcRtz2M7
Bn7VX0nystUDF2HrtXEHpn7O7b0/T+nBm6N6z3+dYKDyNneWDHc9OBKveJfj
FAO32u1p7fbRAxpD/NK2Mww0dxwjzV/SA6117CaqZxlY8CKsbEuIHtRpL4oc
dGXgO10emvI1PZANnPxy0p2BLslyy6439CC7rv+h3znm+ULezEqcHvB87UiI
8WLgniKl5rFEPYjeUXU6x5tpL1toUWOaHvw9laFSf4GBG0Lhm3uOHvhl3VjP
8GXet/jrW2OhHnx+6Tc47M/A3Ao69WqpHpzkPl0+e4mBbDM52XqVelDM4cq1
N5iBIvNXCr1q9WBmg2eA3xUG3mhmUdNt0QPVdReGG0MYqG//rniyUw9C/vrj
rzAGLhyrHZ19pAc50zFDf2IYOE5eHaV814OpqfgDOnEMzEp87Zi0rAcK40nF
ofEM3Pwl9rbNOn14MJh9kSWJgYaGaUXb+PSBdaBgUC+FgXe1dMduiumD2ZMS
net3GHiYY/SSq7Q+JPdUFtHSGcgg1Uyay+nDMLV288YsBtp4jMrM7dMHaVKT
j0kOA6P6midmQB882++/jM1joFRsdpDTIX1oaO7U6i1gYNmj33cL7fThdx21
gHCXgctRH6RvuOoDVvdsPFzCwIz3AzIrF/UhtuzJ+YQyBpZft/4nfVUf+osG
Bp5VMLCEccHFPEofRPJea/JWM7AxqlS1N14fTmeO5FnVMFD2Ly8XOVUfylPf
r0+tY2BAhrbYvRx9mPvvo+erBgZWSMwGN5fog8atr/1CzQzk1p1o6arXh7Do
OXW7VgY6zmpVeXfpA+Par5zM+wzc/8XfVP6ZPnCF/mF9+4CBbs7dsyyj+mAT
vOYh0cmM79eDjQHT+pDnv/7ZyS4Gakt/SmVd1oePPuxq+RQG1ixqZxHYDUDR
kyt7nMaMd8/545ziBnDJlX+ddDcD7VOSQtvkDODhaRH3s48Y+Nd84bSpjgGs
P7HlSXEfA2m9S9XTFgZwyFZ638cnDJx4+1F50t0AUq12Zu7sZ+Biy98S5RgD
GDmssOYxwMAitTL3/+oNQObgXtfKlwycJRtet/tsAOcN1fu+DjLQ9Hlt5zsp
Q2gE7b173jAw7LX2DeXDhvBHC9N93jJQsVTPPOGiIeirG/2rHWXgQ/uzLzfX
GkLcXrOzP94x8I7u69UMDiMYULB4pDLBjLdk9obaCCMQ22WtFDDF7C83c8Uj
O43Aebv9neaPDDSQM8p3/WgElVudVhY/M3BafESFymoMP0TPntH8ysD80bJ2
BV5j0BT06L78jcHcFzzsTESMIYLHe8+DWWa/YHcxbRA2hh6CX8rfHwz8VTlm
38NtDDybgn7rLjBwqviMYjKLMdixhpwKX2Sg01vT+spvRlDwL4LetczsLzts
uP4OGYHyQlySwT8GWr1Vvbe5xggs3uftPrixG9P1jW70OxpBhmEOe8TmbrQ+
oqMjetAIxssyp1s4ulGk6w/FTN0I/HxSK2S4u3FY6D9rOrcRpK3c3M0i0o23
kwRjRUiGMCJ4aXfr7m6kPMhU1uA2hB2X/di/y3fjsvcT87ElA/AZuTAto9iN
OcZOnzXGDYDlrmdFsko3Knull7DWGcB25dO7fbS7Mfmau/KiuQF4mpnv3nG4
GzdMhsUcv6QPjfdM2U9YdKPM36g2GXt9+MtjPJ18tBvrtD97luroQ8JrrGCx
6UYhRcYxMqs+1Luo7x5x6kaJ8Xdqx2/pwXKY1O6Ui904FByn/es2QnTj0q51
qd3o/yc4U6FBBzwGRn/xpnVjpIZgZ7SXDhz8QaVIZ3RjwcXj6x1kdIColHjC
MKcbIwbJv7xStSG5cldiTHE3Oviandf10YLcQvslzuZuzJ8UK0/brAlN/z2g
iw124737bQ7SQyqQVlOYLD/UjccCXjYWRKhA0JOYUzrD3cgjn6qYsUsFtAjW
v0+OdeOu+LXY+cC90BU9o1D4sRt9t0Q/t+ZUhsehW1J3LjH9v1zsnK8nB5Ne
4c6qIj34ua6g9kqcOKSZh1J9xXow4wl9tZ0uCmbyV2VqJXrQbrsEx7VVYWj4
Evhxt1QPeoScOJ7nIQAR53w8t8n1IMsT2xDtAxwg4X7Sj0OnByNIpRdY7411
WjtrR46f6sGuV3vclL5Jkjbr75/c4tyDPJUxV/ctSZEeSGkYOrr04PJ4T0MA
63aS9HuVjYMePRgcvC6mRmIHae6UXFyfbw+aHjJnrJ3aTYo/KZrccr0Hi6iS
lkTevSS63VJhfFkPxu4YGec10yLxLYzO3q3oQZH8cckHQ1okp/9oug+qmOdW
PXe+u2uTFulJb6Zre3DEXW/rQowOSXafAq9JWw/ioeGKy08PkGI4z0Sse9SD
smEvjre265EOUnqdAr/0oMLfVwoRd4xJT+TzxE/veYREkTfpyrctSWJKoZPn
lR5hUlr3dF6bJclD5UTV5b2PkGVfykXFKUsS634x7RS1R6hMJ0vUax8lqRun
OTB0H2GMRcis4cxRUsHphEyFI49Q6a9bWOmxY6SAO2HCv30e4dMmPv2j2jYk
sTUn/uQ65nt3qaeNfE6QZjby8E4f6MUJnXTxw69cSVMLs6YPqL14Xs/tlhDB
h3RFpNyRyOhFVVvB2d0qPiQendM+J3t6MWrhYoyVvQ9J+3p/ytrjXqyk77GZ
LPMhJfPWjxkM9qINpcOLzfgCSU/RL+Dx516MS85+sNXgIinPfSF/lLMPX3d3
xxy65UtSvVXdoMjThwp97lG7C3xJvTUu9HC+PjTgcxLnbfYl/fr18ouUcB82
eh0WYXnnSzoU1azmJtmH3eYaR07u8yOtFAT2fVfpw/wujUqBMT9SIk1xDNT6
UJpF51D2Tz+S7OePc4kafXjxelqsArs/yUrJVmifTh/aHz/S76PqT6rs0DgT
ZNSHNrKPsv1u+ZPw/ax/j0kf/rseznOk0J80uL48WtSsDz12xG9TbfUnrTsk
Uv3gSB+G7ysnSk76k9Iu9HcSj/ahfEHrlx2//UkKKbHPTx7rw2LLLWfVuQNI
lBacqjneh+8N31w6uiOAZDe8vLhmy+SQr9JB2gGk/wHSMdDA
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Frame->True,
    FrameLabel->{{
       FormBox["\"Absorptionskoeffizient (cm-1)\"", TraditionalForm], None}, {
      
       FormBox[
       "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
        TraditionalForm], None}},
    ImageSize->800,
    Method->{},
    PlotRange->{{-200, 15000}, {-0.004939523102364536, 0.025584115529113195`}},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.590919263835581*^9, 3.590919287825157*^9}, {
   3.5909193447412853`*^9, 3.590919491174802*^9}, {3.5909198277984457`*^9, 
   3.59091983775012*^9}, 3.590919883318955*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 718},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 240, 3, 51, "Subtitle"],
Cell[822, 27, 95, 2, 32, "Input"],
Cell[920, 31, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[1039, 36, 160, 2, 31, "Subsubtitle"],
Cell[1202, 40, 1931, 42, 165, "Input"],
Cell[3136, 84, 432, 10, 55, "Input"],
Cell[3571, 96, 608, 9, 31, "Text"],
Cell[4182, 107, 385, 9, 32, "Input"],
Cell[4570, 118, 937, 16, 32, "Input"],
Cell[CellGroupData[{
Cell[5532, 138, 102, 1, 35, "Subsubsection"],
Cell[5637, 141, 367, 7, 32, "Input"],
Cell[6007, 150, 485, 8, 31, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6529, 163, 117, 1, 35, "Subsubsection"],
Cell[6649, 166, 103, 1, 31, "Text"],
Cell[6755, 169, 712, 16, 32, "Input"],
Cell[7470, 187, 152, 2, 31, "Text"],
Cell[7625, 191, 636, 15, 32, "Input"],
Cell[8264, 208, 155, 2, 31, "Text"],
Cell[8422, 212, 729, 17, 32, "Input"],
Cell[9154, 231, 156, 2, 31, "Text"],
Cell[9313, 235, 749, 17, 32, "Input"],
Cell[CellGroupData[{
Cell[10087, 256, 885, 20, 32, "Input"],
Cell[10975, 278, 2185, 42, 626, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13197, 325, 50, 0, 32, "Input"],
Cell[13250, 327, 115, 1, 32, "Output"]
}, Open  ]],
Cell[13380, 331, 1029, 22, 32, "Input"],
Cell[14412, 355, 2289, 62, 49, "Input"],
Cell[CellGroupData[{
Cell[16726, 421, 1165, 28, 55, "Input"],
Cell[17894, 451, 2097, 41, 512, "Output"]
}, Open  ]],
Cell[20006, 495, 430, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[20461, 506, 784, 22, 32, "Input"],
Cell[21248, 530, 645, 20, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21942, 556, 94, 1, 81, "Section"],
Cell[CellGroupData[{
Cell[22061, 561, 129, 2, 32, "Input"],
Cell[22193, 565, 70, 1, 32, "Output"]
}, Open  ]],
Cell[22278, 569, 129, 1, 31, "Text"],
Cell[22410, 572, 977, 22, 32, "Input"],
Cell[23390, 596, 683, 18, 32, "Input"],
Cell[CellGroupData[{
Cell[24098, 618, 803, 17, 32, "Input"],
Cell[24904, 637, 2083, 39, 356, "Output"]
}, Open  ]],
Cell[27002, 679, 231, 7, 32, "Input"],
Cell[27236, 688, 203, 4, 32, "Input"],
Cell[27442, 694, 703, 21, 55, "Input"],
Cell[28148, 717, 408, 10, 55, "Input"],
Cell[28559, 729, 1796, 53, 114, "Input"],
Cell[30358, 784, 2162, 47, 121, "Input"],
Cell[32523, 833, 1688, 46, 101, "Input"],
Cell[34214, 881, 1927, 51, 101, "Input"],
Cell[36144, 934, 2046, 54, 145, "Input"],
Cell[38193, 990, 206, 6, 32, "Input"],
Cell[38402, 998, 1218, 31, 99, "Input"],
Cell[39623, 1031, 1835, 48, 101, "Input"],
Cell[41461, 1081, 1976, 52, 101, "Input"],
Cell[43440, 1135, 2098, 55, 145, "Input"],
Cell[CellGroupData[{
Cell[45563, 1194, 96, 1, 45, "Subsection"],
Cell[45662, 1197, 467, 11, 32, "Input"],
Cell[46132, 1210, 480, 11, 32, "Input"],
Cell[46615, 1223, 517, 11, 32, "Input"],
Cell[47135, 1236, 529, 11, 32, "Input"],
Cell[47667, 1249, 283, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[47975, 1260, 1124, 29, 60, "Input"],
Cell[49102, 1291, 120195, 2006, 2170, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
