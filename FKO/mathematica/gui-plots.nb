(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    110096,       2255]
NotebookOptionsPosition[    107116,       2157]
NotebookOutlinePosition[    107452,       2172]
CellTagsIndexPosition[    107409,       2169]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data Handling", "Subtitle",
 CellChangeTimes->{{3.58989370080422*^9, 3.589893710571745*^9}, {
  3.589898364998941*^9, 3.589898366077715*^9}, {3.58989942230232*^9, 
  3.58989942317397*^9}, {3.589918159154972*^9, 3.589918160560418*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 FontWeight->"Plain"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5899188797150087`*^9, 3.589918881688589*^9}}],

Cell[CellGroupData[{

Cell["System & Directory", "Subsubtitle",
 CellChangeTimes->{{3.589918114348894*^9, 3.5899181226803303`*^9}, {
  3.589918871774456*^9, 3.5899188730424147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"os", " ", "=", " ", "\"\<linux\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"baselinux", " ", "=", " ", "\"\<~/repos/fp/FKO\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "basewin", " ", "=", " ", "\"\<D:\\\\Git\\\\F-Praktikum\\\\AFM\>\""}], 
   ";"}], "                   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "vergiss", " ", "nicht", " ", "den", " ", "backslash", " ", "mit", " ", 
    "backslash", " ", "zu", " ", 
    RowBox[{
     RowBox[{"escapen", "!!"}], "!"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subdir", " ", "=", " ", "\"\<data-plots\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"os", " ", "\[Equal]", " ", "\"\<linux\>\""}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"slash", " ", "=", " ", "\"\</\>\""}], ";", " ", 
     RowBox[{"basedir", " ", "=", " ", "baselinux"}]}], ",", "  ", 
    RowBox[{"(*", " ", "THEN", " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"slash", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     RowBox[{"basedir", " ", "=", " ", "basewin"}]}]}], "]"}], "       ", 
  RowBox[{"(*", " ", "ELSE", " ", "*)"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5898937121168623`*^9, 3.5898937744790373`*^9}, {
  3.589893830758959*^9, 3.589893861654973*^9}, {3.589893913336081*^9, 
  3.5898939555289993`*^9}, {3.589894010271295*^9, 3.589894020995091*^9}, {
  3.589894057001574*^9, 3.589894141649548*^9}, {3.5898983082682343`*^9, 
  3.589898333443564*^9}, {3.589899027357992*^9, 3.5898990596142673`*^9}, {
  3.5899167188349867`*^9, 3.5899167485865517`*^9}, {3.58991832653786*^9, 
  3.589918575312986*^9}, {3.590224295461801*^9, 3.5902243253365097`*^9}, {
  3.590224396622587*^9, 3.5902244025969286`*^9}, {3.590399358971972*^9, 
  3.590399365927926*^9}, {3.590755481310053*^9, 3.5907554815319147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"basedir", "<>", "slash", "<>", "subdir"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnames", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*.dpt\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.589916975884541*^9, 3.589917018013637*^9}, {
  3.589917080976493*^9, 3.589917083376637*^9}, {3.590755516673197*^9, 
  3.5907555171138353`*^9}}],

Cell["\<\
 For[i = 1, i < Length[fnames] + 1, i++, Print[i, \": \", fnames[[i]]]]\
\>", "Text",
 CellChangeTimes->{{3.58991780250066*^9, 3.589917806135584*^9}, 
   3.589918022039701*^9, {3.589918070817853*^9, 3.589918070852622*^9}, {
   3.589919983936844*^9, 3.589919986734435*^9}, 3.5902246120259075`*^9, 
   3.5902256832701793`*^9, 3.590399333157661*^9, {3.590404004262417*^9, 
   3.590404012991782*^9}, {3.590471294340187*^9, 3.590471305132175*^9}, {
   3.5907555341380463`*^9, 3.590755551666417*^9}, {3.5908271323898783`*^9, 
   3.5908271432993183`*^9}, {3.5908494610398283`*^9, 3.5908495312053967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "num_", "]"}], " ", ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"fnames", "\[LeftDoubleBracket]", 
     RowBox[{"num", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
    "\"\<Table\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.590755575376831*^9, 3.590755579153143*^9}, {
  3.590755690082288*^9, 3.590755690690936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.590755749014434*^9, 3.590755800053501*^9}, {
   3.590755839252345*^9, 3.590755853778029*^9}, {3.590755895067017*^9, 
   3.590755941299329*^9}, {3.5907560035415707`*^9, 3.590756011829071*^9}, 
   3.590756077986495*^9, {3.590756144769759*^9, 3.590756208186165*^9}, {
   3.590756262809587*^9, 3.5907562810013113`*^9}, {3.590756427171832*^9, 
   3.5907564654329977`*^9}, {3.590827166824374*^9, 3.5908271672295027`*^9}, {
   3.590829088492915*^9, 3.590829088752921*^9}, {3.590829719205427*^9, 
   3.590829741240904*^9}, {3.5908301057109013`*^9, 3.590830106113016*^9}, {
   3.590830219858553*^9, 3.590830219910832*^9}, {3.590830269998877*^9, 
   3.590830270628394*^9}}],

Cell[CellGroupData[{

Cell["variables", "Subsubsection",
 CellChangeTimes->{{3.5908509580137587`*^9, 3.590850963740944*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"begin", "=", "301"}], ";", 
  RowBox[{"end", "=", "14998"}], ";"}]], "Input",
 CellChangeTimes->{{3.5908509679541473`*^9, 3.590850983183313*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"data", "[", "n", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.95", ",", "1.05"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "22", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590755934556054*^9, 3.590755935112893*^9}, {
  3.590755968856822*^9, 3.5907559689929047`*^9}, {3.590827110523011*^9, 
  3.590827159688807*^9}, {3.590827362768519*^9, 3.5908273635138063`*^9}, {
  3.590856259754369*^9, 3.590856272051862*^9}, {3.590856310858718*^9, 
  3.5908563408260193`*^9}, {3.590856699818503*^9, 3.590856707676117*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 22, 1}}, Typeset`size$$ = {
    800., {245., 251.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$7233$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$7233$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        $CellContext`data[$CellContext`n$$], PlotRange -> {0.95, 1.05}], 
      "Specifications" :> {{$CellContext`n$$, 0, 22, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{847., {300., 307.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.590827161419854*^9, 3.590827169018498*^9}, 
   3.59082736445*^9, 3.590849113276587*^9, 3.590853434624927*^9, 
   3.590856276945065*^9, {3.590856316622292*^9, 3.5908563440290203`*^9}, 
   3.590856711013865*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Samples\[AliasDelimiter]", "Subsubsection",
 CellChangeTimes->{{3.590849584333547*^9, 3.5908495994765167`*^9}}],

Cell["Reflexion GK 300-8000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rgk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
  3.590829218251894*^9, 3.590829224582018*^9}, {3.5908294507014017`*^9, 
  3.590829453219268*^9}, {3.590829883852687*^9, 3.590829885776716*^9}, {
  3.5908299365866337`*^9, 3.590829965988549*^9}, {3.590830393493857*^9, 
  3.5908303936508904`*^9}}],

Cell["Reflexion TQ 1000-15000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.5908292358086*^9}, {
  3.590829353343009*^9, 3.590829356275927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rtq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "15", ",", "18", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.590829379472682*^9, 
   3.590829381254821*^9}, {3.590829813528311*^9, 3.590829849608543*^9}, {
   3.590829971964417*^9, 3.5908299788124847`*^9}, 3.590830396501801*^9}],

Cell["Transmission GK 300-8000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}, {
  3.590829391094329*^9, 3.590829393330346*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tgk", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Darker", "[", "Blue", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "11", ",", "14", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.590829412118149*^9, 
   3.590829412277051*^9}, {3.590829470312109*^9, 3.5908294704216623`*^9}, {
   3.5908298990663147`*^9, 3.590829909368627*^9}, {3.590829983474216*^9, 
   3.5908299910455914`*^9}, 3.59083039839853*^9}],

Cell["Reflexion TQ 1000-15000", "Text",
 CellChangeTimes->{{3.590829196743311*^9, 3.590829213977874*^9}, {
  3.590829493665338*^9, 3.5908294982511463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ttq", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Darker", "[", "Red", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "19", ",", "22", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.590829061884296*^9, 3.590829107321793*^9}, {
   3.590829218251894*^9, 3.590829224582018*^9}, {3.5908294885958767`*^9, 
   3.590829490587605*^9}, 3.5908298671126966`*^9, {3.590829916893248*^9, 
   3.590829919782926*^9}, {3.590829994262092*^9, 3.590830000061201*^9}, {
   3.590830097911972*^9, 3.590830097995057*^9}, 3.590830400310499*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rgk", "\[LeftDoubleBracket]", "im", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{
      "rtq", "\[LeftDoubleBracket]", "im", "\[RightDoubleBracket]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"im", ",", "1", ",", "4", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590830002649498*^9, 3.590830078206731*^9}, {
  3.5908301344211407`*^9, 3.590830149853099*^9}, {3.590830410752392*^9, 
  3.590830416231207*^9}, {3.590830557956255*^9, 3.59083056056857*^9}, {
  3.590830721299576*^9, 3.5908307236816797`*^9}, {3.5908309222316723`*^9, 
  3.590830924789551*^9}, {3.590852949754847*^9, 3.590852952321006*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`im$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`im$$], 1, 4, 1}}, Typeset`size$$ = {
    800., {247., 252.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`im$1708$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`im$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`im$$, $CellContext`im$1708$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Part[$CellContext`rgk, $CellContext`im$$], 
         Part[$CellContext`rtq, $CellContext`im$$]}], 
      "Specifications" :> {{$CellContext`im$$, 1, 4, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{847., {291., 298.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.590830115940566*^9, 3.5908301502746687`*^9}, 
   3.590830416951972*^9, 3.59083056200149*^9, 3.590830724249929*^9, 
   3.5908309254075747`*^9, 3.5908491250395317`*^9, 3.59085007031147*^9, 
   3.590852956655814*^9, 3.5908534429594727`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fctab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"data", "[", "n", "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "fnames", "]"}], "-", "1"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.590850680561717*^9, 3.5908507880076303`*^9}, {
  3.590851067368474*^9, 3.590851093655755*^9}, {3.590851177720718*^9, 
  3.590851241217023*^9}, {3.590852350921177*^9, 3.590852355960884*^9}, {
  3.5908528889053698`*^9, 3.590852912185439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fct", "[", 
   RowBox[{"n_", ",", "cut_", ",", 
    RowBox[{"x_:", "x"}]}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{
          RowBox[{
          "fctab", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
          "[", "x", "]"}], 
         RowBox[{"x", "<", "cut"}]},
        {
         RowBox[{
          RowBox[{"fctab", "\[LeftDoubleBracket]", 
           RowBox[{"n", "+", "8"}], "\[RightDoubleBracket]"}], "[", "x", 
          "]"}], 
         RowBox[{"x", ">", "cut"}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQrceT3s1w8JXjqaNL+kC0ScyEqSD63b/+OSD6TduD
BSCaIVd4IYj2VXJbDqKXBUtsAtFRZWfOgujcK2ZXQfSknOgnIPrYm71gevpc
yVcg+t6uu29ANJ/XwY8g+sf0w79A9F/FSkZGIP3Jrp4NRB9b8LgBRB88fqAV
RN9h05wGoi8dtgfTa9YLzAHRJ8SVwXTvrEVnQLTVz+dgWmeG4nUQbXD2FZju
OHvlAYi+kvfsIYguMm59BqIVtgu+AtFNLbEaTEB61/G5YLqC69YUViBdNX/V
VBCdpiu2CkTv0tNZDaKPLOCUYQP5P1xdFkQDAO0wpmU=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "fctab", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], "[", 
       "x", "]"}], "-", 
      RowBox[{
       RowBox[{"fctab", "\[LeftDoubleBracket]", 
        RowBox[{"n", "+", "8"}], "\[RightDoubleBracket]"}], "[", "x", "]"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "begin", ",", "end"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ix"}], "+", "cut"}], ",", 
          RowBox[{"ix", "+", "cut"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"n", ",", "7", ",", "14", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ix", ",", "100", ",", "5000", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cut", ",", "300", ",", "6000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590852679674592*^9, 3.590852690191598*^9}, 
   3.5908527759762363`*^9, {3.590852810400239*^9, 3.590852821888278*^9}, {
   3.590852999033951*^9, 3.5908529990889187`*^9}, {3.590853040593564*^9, 
   3.590853073808433*^9}, {3.590853360018629*^9, 3.5908533601391487`*^9}, {
   3.590859713884118*^9, 3.590859772212488*^9}, {3.590859825997547*^9, 
   3.590859826072486*^9}, {3.590859953780167*^9, 3.590859954249898*^9}, {
   3.5908610690290337`*^9, 3.590861081621467*^9}, {3.5908611348464212`*^9, 
   3.5908611388045893`*^9}, {3.590865325430545*^9, 3.5908653255990562`*^9}, {
   3.590865399296115*^9, 3.590865576991584*^9}, {3.590865607872822*^9, 
   3.590865650624611*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`cut$$ = 4000., $CellContext`ix$$ = 
    713, $CellContext`n$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 7, 14, 1}, {
      Hold[$CellContext`ix$$], 100, 5000, 1}, {
      Hold[$CellContext`cut$$], 300, 6000}}, Typeset`size$$ = {
    360., {113., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$87386$$ = 
    0, $CellContext`ix$87387$$ = 0, $CellContext`cut$87388$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`cut$$ = 300, $CellContext`ix$$ = 
        100, $CellContext`n$$ = 7}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$87386$$, 0], 
        Hold[$CellContext`ix$$, $CellContext`ix$87387$$, 0], 
        Hold[$CellContext`cut$$, $CellContext`cut$87388$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[Part[$CellContext`fctab, $CellContext`n$$][$CellContext`x] - 
        Part[$CellContext`fctab, $CellContext`n$$ + 
         8][$CellContext`x], {$CellContext`x, $CellContext`begin, \
$CellContext`end}, 
        PlotRange -> {{-$CellContext`ix$$ + $CellContext`cut$$, \
$CellContext`ix$$ + $CellContext`cut$$}, {-0.1, 0.1}}], 
      "Specifications" :> {{$CellContext`n$$, 7, 14, 1}, {$CellContext`ix$$, 
         100, 5000, 1}, {$CellContext`cut$$, 300, 6000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {193., 200.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.590852822691029*^9, {3.590852924818357*^9, 3.590852935702423*^9}, 
   3.5908529671240673`*^9, 3.5908529996785917`*^9, {3.590853030310957*^9, 
   3.590853074372181*^9}, 3.590853360578665*^9, 3.590853449230529*^9, 
   3.590859714502*^9, {3.590859758120784*^9, 3.5908597727125273`*^9}, 
   3.590859874501526*^9, 3.590859955001914*^9, {3.5908610453857203`*^9, 
   3.5908610823800364`*^9}, {3.590861135710738*^9, 3.590861139233055*^9}, {
   3.5908652918319283`*^9, 3.590865326349182*^9}, {3.590865424493684*^9, 
   3.5908654861330643`*^9}, {3.590865553475726*^9, 3.590865578202132*^9}, {
   3.590865609693828*^9, 3.590865651704214*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cuts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "fctab", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
           "[", "x", "]"}], "-", 
          RowBox[{
           RowBox[{"fctab", "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "8"}], "\[RightDoubleBracket]"}], "[", "x", 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "4000", ",", "350", ",", "12000"}], "}"}], ",", 
         RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
         RowBox[{"DampingFactor", "\[Rule]", "1"}], ",", 
         RowBox[{"MaxIterations", "\[Rule]", "25"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "7", ",", "14"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.590865932385112*^9, 3.590865979709795*^9}, {
  3.5908660666459084`*^9, 3.590866144607682*^9}, {3.590866200205927*^9, 
  3.590866204808511*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(25\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.590866205725039*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.59086620572694*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(25\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.590866205816739*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.5908662058185997`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(25\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.590866205819611*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: cvmit\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.5908662059253883`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.590866205926599*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5908661463953114`*^9, 3.590866205927558*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FP shit", "Section",
 CellChangeTimes->{{3.590853847142745*^9, 3.5908538488702307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";", 
  RowBox[{"\[Kappa]", "=."}], ";", 
  RowBox[{"n", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.590864780906958*^9, 3.590864808556031*^9}, {
  3.590864852812674*^9, 3.590864855860244*^9}}],

Cell["\<\
setze reflint = probe 7 (gaas mit cut bei 4100)\
\>", "Text",
 CellChangeTimes->{{3.590864567929431*^9, 3.590864604073188*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reflint", "[", "\[Nu]_", "]"}], ":=", 
   RowBox[{"fct", "[", 
    RowBox[{"7", ",", "4100", ",", "\[Nu]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"transint", "[", "\[Nu]_", "]"}], ":=", 
   RowBox[{"fct", "[", 
    RowBox[{"11", ",", "4250", ",", "\[Nu]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"440", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.590853862920051*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]rg1", "=", "0.0"}], ";", 
  RowBox[{"\[CapitalDelta]rg2", "=", "0.0"}], ";"}]], "Input",
 CellChangeTimes->{{3.59086462772552*^9, 3.590864630308135*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Reflexion", " ", "einer", " ", "idealen", " ", "Grenzfl\[ADoubleDot]che", 
    " ", "in", " ", "Abh\[ADoubleDot]ngigkeit", " ", "von", " ", "n", " ", 
    "und", " ", "\[Kappa]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rg", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "^", "2"}], "+", 
       RowBox[{"\[Kappa]", "^", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}], "^", "2"}], "+", 
       RowBox[{"\[Kappa]", "^", "2"}]}], ")"}]}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Absorptionskoeffizient", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "[", "\[Nu]_", "]"}], ":=", 
    RowBox[{"4", "*", "\[Pi]", "*", 
     RowBox[{"Abs", "[", "\[Kappa]", "]"}], "*", "\[Nu]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.590853882856579*^9, 3.590853896216625*^9}, {
  3.590864317093154*^9, 3.59086432270041*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transth", "[", "\[Nu]_", "]"}], ":=", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "rg"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "rg"}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}]}], "*", "d"}], "]"}]}], 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", "rg", ")"}], "*", 
       RowBox[{"(", "rg", ")"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}]}]]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reflth", "[", "\[Nu]_", "]"}], ":=", " ", 
    RowBox[{"rg", "-", "\[CapitalDelta]rg1", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{"rg", "+", "\[CapitalDelta]rg1"}], ")"}]}], ")"}], "^", 
         "2"}], ")"}], "*", " ", 
       RowBox[{"(", 
        RowBox[{"rg", "-", "\[CapitalDelta]rg2"}], ")"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rg", "-", "\[CapitalDelta]rg1"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"rg", "-", "\[CapitalDelta]rg2"}], ")"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          RowBox[{"\[Beta]", "[", "\[Nu]", "]"}], "*", "d"}], "]"}]}]}]]}]}], 
   ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.590853942517531*^9, 3.590853977260036*^9}, 
   3.590859630092596*^9, {3.590860800928321*^9, 3.590860837976828*^9}, {
   3.590864289347361*^9, 3.590864313554084*^9}, {3.5908662818509693`*^9, 
   3.590866446288129*^9}},
 FormatType->"InputForm"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Nullstellensuche", " ", "zur", " ", "Bestimmung", " ", "der", " ", 
    "optischen", " ", "Konstanten"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"transth", "[", "\[Nu]", "]"}], "-", 
              RowBox[{"transint", "[", "\[Nu]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"reflth", "[", "\[Nu]", "]"}], "-", 
              RowBox[{"reflint", "[", "\[Nu]", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Kappa]", ",", "0.0"}], "}"}], ",", 
           RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
           RowBox[{"DampingFactor", "\[Rule]", "1"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "30"}]}], "]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "550", ",", "11230", ",", "8"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5908600453290377`*^9, 3.590860051183248*^9}, {
  3.590860236535568*^9, 3.5908602433661613`*^9}, {3.5908602869672127`*^9, 
  3.590860314151001*^9}, {3.590860555197912*^9, 3.590860555297802*^9}, {
  3.5908605867178593`*^9, 3.590860611821871*^9}, {3.59086070803046*^9, 
  3.590860796206442*^9}, {3.590860875517754*^9, 3.590860899279314*^9}, {
  3.59086451588124*^9, 3.590864517168496*^9}, {3.5908646692491617`*^9, 
  3.590864680040265*^9}, {3.590864743985942*^9, 3.59086474442418*^9}, {
  3.590865101839962*^9, 3.590865144361377*^9}, {3.590865175072837*^9, 
  3.59086524987227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "der", " ", "Brechzahl", " ", "aus", " ", "der", " ", 
    "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", " ", "und", 
    " ", "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"brechzahl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"n", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "brechzahl", "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
        "\"\<Brechzahl\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.590864943512665*^9, 3.590864957648201*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
xf58aHbJLX/1mfrnI1gHLxcx3Tkf4YVSF8Ur6p8PjfMfIv6xfj75WP3w7PyS
cuqfj4+DNbd9btj/5eOkycItG2upfz6smhVtyOJ+TZQP9zVxZcvrqX8+/nVp
MiiU+7uCfBzZX3ilqin3f/no1TOthRP3S8X5+C/Sr74v85fmY3h69ZJi7qfL
8pH0rPMQ7Q7c/+cj4fzGC6t+U/98zDgx5UFyw/4vH8s03wSEtBDyN5XiTdcr
re93EXALKba8lZemtBFwaylMO8aOKtAScDsp0r5UHYzXFHAnKZwenon40l/A
XaWItLH/lsX0nlLsWWr3d+pYAetKsbDF+NQH3G/3l8JH2eVhT+7fB0nx1nbv
tt5sX30pWp2XRBiyPsOlaNZ/cpvFlQKf0VIcF08r6dJLSB8nheOb/c0mmAp4
khS3r93at5HpplLon3P/fHCAgKdJcd21btcVAwHPlGKX5FTToTz/zJVClFP2
Y9NIAVtKkXpih90pnm8WSdHhis6J1zyPLVXzkQ4JeTpPwCuliC7uc6qOeI0U
eq+2vWjH/OulqHZ6M1BngYA3SyFt/rZNiaWAbaR4llzeZZu5gHdKkfX3zJtl
PL/ZSXFkW8G9BMa7HZAiZI77jFWMtzoixd7lc2Yu/E/Ax6QIHqM5ZiDP3yel
sKkeK7nI8+ZpKSa43kgbyHi2c1KMbB1tVMTzsYcUwyZ8iX7BeEQvKbIVNZqL
GS/iq9ZDd2znqzwPB0ox0Nu8/iLjP0KkMO+TaCdiPF2E2v+Ivy2+Ml4rWorE
ZTsqG+Jf49T+bYIauTI+KUmKVfZev2cyPilNij4thmYN531DphSSm0VBXXif
kCuFXY5H8WfGV+ZLET/rjksh40kUUgx1y9M34PcMV6XY1vmxryHre1OKEVKj
e5d4/1Akxfvucx3j+P3EfSkq17b2GcPvWx5JsWhil0Fr+X3MMyn+a985azTT
X0jRcte7yDJ+L/VGClgbjNZhPEm5FJvnzezc+J2AP0kR/tm05ibvp6ql2O/6
Nc+N39d8U/OTxSU+LBDwTyn6vui7thnjS2qlCMqV7ijg/dc/Ka52mWQ5tKlw
39ZUhsebOis8+T1TCxkS4qctd6Z9axn+lYsXfuX3Ue1kMNjafXMr3m91Uqff
b5J1kd83dZUh+nAb/QTeZ/WU4Vpszydp/P5MV4Zj0vuzLHmf11+G3rtfKyp4
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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Brechzahl\"", TraditionalForm]},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 11230.}, {0, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{224.6, 224.6}, {0., 0.}}]], "Output",
 CellChangeTimes->{{3.590864936951037*^9, 3.590864958475876*^9}, {
   3.590865132174713*^9, 3.5908651479332047`*^9}, 3.5908652207309227`*^9, 
   3.590865252858261*^9, 
   3.590866455867322*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
6yvbiqpgJ8Z2aI7+IZv1lF5eVaX43f8AoY8eqA==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Bildung", " ", "des", " ", "Extinktionskoeffizienten", " ", "aus", " ", 
    "der", " ", "L\[ODoubleDot]sung", " ", "der", " ", "Nullstellensuche", 
    " ", "und", " ", "graphische", " ", "Darstellung"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"extinktionskoeffizient", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Kappa]", "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "extinktionskoeffizient", "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
        "\"\<Extinktionskoeffizient\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.01"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.590864981559432*^9, 3.590864987460594*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
j/Bh+afj9afgS7dZexrp2LE3/rfrbFoPuunwFpRc8P1M422SDseHvblOR1j+
6UhwTlzqwNghHUHrXSQP3GX5p0PxbOJQXba+/NMxpnbRh12vWf7pMDKskLQZ
YPmn41fJ5ZQhi1j+6fgocXvPkqUs/3RM3TamPTaH1T8dYrnW+ocbWP7psLz8
ZZ/rapZ/Oo4dL1wpY0v20hmocpczGpNJ80k+A5dPn38+spp0jQzou4x5IhhG
rJuBtrM/X3sUsfmfgQnm7xLP7WXrPwPzPvycbanD5n8GFr1a57mGrR/3DBjk
tIqrybD1nwGnicp/ZSNofUdm4P3Ml98+DBBnZqDAKPv4hRds/WdAZq5xvQx7
PqrPQOtihxBla9KbM7D85Mf94tuJOzIQv+bmpXtziPszMK3FePLRe2z/z4Qc
/zOn+RDb/zOx5NeLjfbh7PzLxL2DWvVJ7PlKNxOp67AkN4adfyL/poniQ/ns
/M+EtXDy7cwxLP9M8Dhnh/973En5Z+LrvYVp6bLs/M+E51bDXn12nkdmYsy0
tR6r5cg+MxOjar7VLHCj56NKUbyGIQ9XziSuz4SJ+lyp4BHs/Bf1951laFwQ
Pa91ZCJq4+pjiQ+ovf5MrJc6vqP1ZQflnwUXJYl0xbAPlH8W5nf27nbZTe1r
ZCEhN+mu70p2/ovs38demmZCz9smWRhmHfteupY+L7LKgvPa2p6mli+UfxZ4
PToLM69Te+5Z6G8Keco3a6f8s+Dz/OLbSYnkH5mFCV2jgjZNIP/MLIxfellN
3JT6W5mF44uHxZ31JK7PQrz948Gy24ibs8D/Ml82sJTidWQh5N+9GzvKSe/P
wqgmuxmLR1B86Wy4/478YvWaPt+Sz4bq8lTdu89ovDSyMSth9KukOdQ/3Wyc
caqYc+ca9c8kG+/53mpTglj+2Ugp+ibxQkDtOWRDeZja1fY8Vv9sRBTeTHxi
R/7+2fDb4Dnx8kjSI7NRcWL4MPVM6n9mNs6O8ehfZE96ZTa+tJiM2q1B8eqz
MULMZtS0KOLmbBjtkDq+6Anl25GNv0enOqr/oHz7RfaftsdaNVF86Rzo3Zq/
ds8Mmi/yOZA1XPoyawL5a+Tgd5JRzbMW8tfNQX/5szGaUiz/HFQdNx11pJ76
Z5WDZcd1kq7PIH+HHAi2nAu/10jsnoOkOoHd7FiWfw6CNn3clSVBHJkDsRsz
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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Extinktionskoeffizient\"", TraditionalForm]},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 11230.}, {0, 0.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{224.6, 224.6}, {0., 0.}}]], "Output",
 CellChangeTimes->{{3.590864979485941*^9, 3.590864988155635*^9}, 
   3.590865258318109*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
qjAhmQH01Fo+FE/8P9i9B9k=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Berechnung", " ", "des", " ", "Absorptionskoeffizienten", " ", "und", " ",
     "graphische", " ", "Darstellung"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"absorptionskoeffizient", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"4", "*", "\[Pi]", "*", 
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}], "*", "\[Kappa]"}], "/.", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sol", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "absorptionskoeffizient", "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wave numbers (\!\(\*SuperscriptBox[\(cm\), \(-1\)]\))\>\"", ",", 
        "\"\<Absorptionskoeffizient (cm-1)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.59086493315349*^9, 3.590864975467409*^9, {3.590865008875325*^9, 
   3.590865015698516*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJw1mHlczdvXx8uUEiESklmGkLo0yseUJF3KEGUopBQRJSQqJXWaU0ed5k51
TqfTGUKuDLmKlMxKIpFyCSVDudHT87tr+yOv92uttdf+7LX32vt8Jzp72u7q
o6CgMLv3z////79/egHonnNce3X/Ufgf7w+AtcrJljybQf+xJACvm5WHjIvp
8x+3BWA7Vjsntyv8x3qBaNqv8DIi8t9F/8UHYrLeAwelrm//sSQQx5RPBHsm
dfzHbYHIWj4kf9e39v9YLwhtg+WDni4j3h+Elj/eWE81b6P4IHAXRqwe7fOB
4oPgohA020nnH4o/BZfljfMVF72n+FMILqtyP6n7ieJP4cGtB3cjX7+j+FPw
Cvc5u9GbxtMLRuwNhe1XQj9TfDCyGyIyzZJbKT4Y4mDb3T8f0fhtwVDWP34o
4EoLxYfgN++wieu+ZooPgSn2iJ8taaL4EHSk2nLPlr+h+BBsV3AbOav5NcWf
hufSD7+bYon3n4Z4U78Qv2vEktN4OHbPp+pmGq/tNNJqnjWmP2T5Q1EdNrP6
rSrp2x+KE4EWXllONB9JKNYHqT75OYzFh2K7Lc4++Mjyn4Hlo6+3i/waKf4M
luupPe2JYPnPYHCkmpsgirjtDHTsvYftmEN69MIQb6vyYV1f4v1h2HN48/PF
54glYRg6zsC85T2LD4P+tK1Xotj4euHwiX4vNvFm+sNRW9imNyWU5iMJx+Mn
9k+Gab+i+HD0G7vgSMSlBornwHXz2NDKpy8ongMn963zd/oSSzj4vb3/Idfs
eornoOp6x4BDt55TfAS8z2uuPHn+GcVHwN1yf/stB2JJBKq/tF7QtiZui8DF
9wuXb9pRS/GR8H0dEF8aWUPxkVC/Fp254jmxJBK5xZfuO08m/7ZImPcoK4d1
svgoRL0aXWJoxPJH4aPLldhFy+ooPgofrEszvIyI26Lw9opCue1Nmr9mNLgT
5j3gOhMbRUPDNmmQQTqxfTSGwi6+lk/sGw3t8uGvzmoTc6MRlDbJ4Z0hcXE0
9iku4b+5Qflqo/Epoajf8lXEndGYma5spN9BrBkDJ2n5nJnXWP4YHNdX1OTG
0Hrbx2CaZsHSOrb+vjFwcB04znk41YcbAyUYpfDWkL04Bs7jLa9vMaPxamMw
XuP9zskdtD6dMdi78oDPdXuWPxYX2r6dfDiL2CgWKw/u9vO/R/72sVhSrnN1
lg3ZfWPxa8+xivesvtxYpD4rUL6jQ1wci+HDb9jPryGujUX0pZiJQ6JY/ljk
62zoLpMTa8ahx3vTzDMCYqM4TCy+aZu9h+WPg7taVENdH5Y/DtOVDDcXaxBz
4/ApINZe7QvLH4fGjISarVKmPw6BC6OObz3D8sfh467TlZw7LH886rp3jXoY
x9Y/HiMj685X19H49vFQVyuabRbI8sfjwRTPZYPCmP54cKMfRhnsZusfj6K2
6PKgcyx/PP6ISzOct5Pq1RmPnut9DNpA51HzLCaOWv36QDDFG51FdKtdKceE
6T+LFZ+dFMILyN/3LPIG3bi75gCdD26vv7NzvN9Llv8sPke5TzZ0KKP8Z9Fd
u9xphzH1k86zuG09QFnO+pdmAvyS5Ab3NYiNEjDXbo7D85Iqyp+AZUe96hYr
EPsmoFB6N0H7fAblT8DaeNOQn3tp/OIE3Jq6fO3afm8pfwJMpyr9ylhI3JmA
3ZN0dinPYfoTEVbc5Wg7roLyJ2L/Bu+mWT3s/CWCp6JrMbqBnb9EzFv51P5Y
tYjyJ+LgAi3TC/syKX8iqtLK9Tkv6H6rTcQ1q2WqKp9oPToT0TrWs3heF6s/
F7+np6y/WHud8nNxOu7PCcZcut/suQi/qvj+Wfxjys+FgYf9wpDuR5SfCxXz
xEecf+i+LOZiRFHsfq+xdF/UcmHh26T1Jpv0dvby+ztrTrky/efwacTuL7+7
2PqfQ/u9mMM9hbRe9ufQcTs3/Lj0CeU/h/EHQ6cuT2X7/xw8a/qNOd5D91nx
OczUqbcd/om49hxCyxunHrBi638O+z2MjvRroHppJqGy3NjX9TTdf0ZJGPCu
xvPmcdqv9knY0OT2T2Ei3Ye+SeCWnR68YgnNh5sEsynD3/1dTfuxOAnBty6f
/uMu3T+1STAY6iiPaqD5dCah6NUM04qfFK+ZjKmt2l3KE2g+Rsm4fEq4aLI5
sX0yalLkOXoz2P5PRp5tVIRjBe13bjJ81IyGOO+l/VmcjHcc+5O1B29T/mRs
25RtPHIh7Z/OZMwX1H2oGvmA8vNgLfc77v6ArT8Pe5QEq3T86H605+Ex32e8
uIKtPw+SBt0B5a+Zfh686rzaPb3Z/ufhS+DIj6ZatB61PFh+vW863aSa8vNw
tVmT/9Ka9d8UVFUrrlT0Yec/BV+CfM2enGLrnwLhWjvBZi7rPym4p+62XFX7
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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"wave numbers (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-1\\)]\\))\"", 
     TraditionalForm], 
    FormBox["\"Absorptionskoeffizient (cm-1)\"", TraditionalForm]},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 4998.}, {0, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{99.96000000000001, 99.96000000000001}, {0., 
   0.}}]], "Output",
 CellChangeTimes->{{3.590865004924799*^9, 3.590865016404508*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{948, 1053},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 240, 3, 51, "Subtitle"],
Cell[665, 20, 95, 2, 32, "Input"],
Cell[763, 24, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[882, 29, 160, 2, 31, "Subsubtitle"],
Cell[1045, 33, 1931, 42, 187, "Input"],
Cell[2979, 77, 432, 10, 55, "Input"],
Cell[3414, 89, 608, 9, 31, "Text"],
Cell[4025, 100, 385, 9, 32, "Input"],
Cell[4413, 111, 937, 16, 32, "Input"],
Cell[CellGroupData[{
Cell[5375, 131, 102, 1, 35, "Subsubsection"],
Cell[5480, 134, 180, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[5685, 142, 712, 15, 32, "Input"],
Cell[6400, 159, 1736, 35, 624, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8185, 200, 117, 1, 35, "Subsubsection"],
Cell[8305, 203, 103, 1, 31, "Text"],
Cell[8411, 206, 664, 16, 32, "Input"],
Cell[9078, 224, 152, 2, 31, "Text"],
Cell[9233, 228, 636, 15, 32, "Input"],
Cell[9872, 245, 155, 2, 31, "Text"],
Cell[10030, 249, 729, 17, 32, "Input"],
Cell[10762, 268, 156, 2, 31, "Text"],
Cell[10921, 272, 749, 17, 32, "Input"],
Cell[CellGroupData[{
Cell[11695, 293, 765, 17, 32, "Input"],
Cell[12463, 312, 1800, 36, 606, "Output"]
}, Open  ]],
Cell[14278, 351, 689, 17, 32, "Input"],
Cell[14970, 370, 2289, 62, 49, "Input"],
Cell[CellGroupData[{
Cell[17284, 436, 1778, 43, 77, "Input"],
Cell[19065, 481, 2896, 54, 410, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21998, 540, 1074, 27, 77, "Input"],
Cell[23075, 569, 520, 10, 24, "Message"],
Cell[23598, 581, 711, 13, 80, "Message"],
Cell[24312, 596, 520, 10, 24, "Message"],
Cell[24835, 608, 714, 13, 80, "Message"],
Cell[25552, 623, 520, 10, 24, "Message"],
Cell[26075, 635, 558, 11, 24, "Message"],
Cell[26636, 648, 712, 13, 80, "Message"],
Cell[27351, 663, 556, 11, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27956, 680, 94, 1, 81, "Section"],
Cell[28053, 683, 247, 6, 32, "Input"],
Cell[28303, 691, 137, 3, 31, "Text"],
Cell[28443, 696, 330, 9, 32, "Input"],
Cell[28776, 707, 182, 6, 32, "Input"],
Cell[28961, 715, 203, 4, 32, "Input"],
Cell[29167, 721, 703, 21, 55, "Input"],
Cell[29873, 744, 408, 10, 55, "Input"],
Cell[30284, 756, 2003, 59, 104, "Input"],
Cell[32290, 817, 1855, 42, 143, "Input"],
Cell[CellGroupData[{
Cell[34170, 863, 1520, 42, 170, "Input"],
Cell[35693, 907, 32263, 538, 571, 18125, 305, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67993, 1450, 1587, 43, 170, "Input"],
Cell[69583, 1495, 27330, 457, 525, 18800, 316, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96950, 1957, 1757, 47, 216, "Input"],
Cell[98710, 2006, 8354, 145, 531, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

